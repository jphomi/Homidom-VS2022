//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.269.
// 
#pragma warning disable 1591

namespace HomiTest.HmdService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BasicHttpBinding_IHoMIDom", Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ActionActionVB))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ActionActionDevice))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ActionActionMail))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ActionActionIf))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ActionActionMacro))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ActionActionHttp))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ActionActionLogEventHomidom))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ActionActionLogEvent))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ActionActionDos))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ActionActionSpeech))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TemplateDevice[]))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DeviceActionParametre[]))]
    public partial class Server : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback ReturnTriggerByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteTriggerOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveTriggerOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListMethodOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get4LogOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTypeLogEnableOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetTypeLogEnableOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetMaxMonthLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMaxMonthLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback LogOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReturnLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetMaxFileSizeLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMaxFileSizeLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSMTPServeurOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetSMTPServeurOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSMTPLoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetSMTPLoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSMTPPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetSMTPPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSMTPMailServeurOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetSMTPMailServeurOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetListOfTemplateOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateNewTemplateOperationCompleted;
        
        private System.Threading.SendOrPostCallback StartLearningOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveTemplateOperationCompleted;
        
        private System.Threading.SendOrPostCallback TelecommandeSendCommandOperationCompleted;
        
        private System.Threading.SendOrPostCallback EnableRepertoireAudioOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllRepertoiresAudioOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllExtensionsAudioOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifLoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangePasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReturnUserByUsernameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllUsersOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReturnUserByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllDevicesOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecuteDeviceCommandOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteDeviceOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteDeviceCommandIROperationCompleted;
        
        private System.Threading.SendOrPostCallback ReturnDeviceByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReturnDeviceByAdresse1TypeDriverOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveDeviceOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveDeviceCommandIROperationCompleted;
        
        private System.Threading.SendOrPostCallback StartIrLearningOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifChampOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllDriversOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecuteDriverCommandOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReturnDriverByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteDriverOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReturnDriverByNomOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveDriverOperationCompleted;
        
        private System.Threading.SendOrPostCallback StopDriverOperationCompleted;
        
        private System.Threading.SendOrPostCallback StartDriverOperationCompleted;
        
        private System.Threading.SendOrPostCallback ZoneIsEmptyOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteZoneOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllZonesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDeviceInZoneOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReturnZoneByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveZoneOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddDeviceToZoneOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteDeviceToZoneOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteMacroOperationCompleted;
        
        private System.Threading.SendOrPostCallback RunMacroOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllMacrosOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReturnMacroByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveMacroOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllTriggersOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllVoiceOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDefautVoiceOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetDefautVoiceOperationCompleted;
        
        private System.Threading.SendOrPostCallback CanDeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTimeSaveOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetTimeSaveOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetIdServerOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetIdServerOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetServerVersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback MessageToServerOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveConfigOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExportConfigOperationCompleted;
        
        private System.Threading.SendOrPostCallback ImportConfigOperationCompleted;
        
        private System.Threading.SendOrPostCallback StartOperationCompleted;
        
        private System.Threading.SendOrPostCallback StopOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReStartOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetPortSOAPOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPortSOAPOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetIPSOAPOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetIPSOAPOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLastStartTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHeureLeverSoleilOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHeureCoucherSoleilOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLongitudeOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetLongitudeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLatitudeOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetLatitudeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHeureCorrectionCoucherOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetHeureCorrectionCoucherOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHeureCorrectionLeverOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetHeureCorrectionLeverOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetByteFromImageOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetListOfImageOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllListHistoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHistoOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteExtensionAudioOperationCompleted;
        
        private System.Threading.SendOrPostCallback NewExtensionAudioOperationCompleted;
        
        private System.Threading.SendOrPostCallback EnableExtensionAudioOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteRepertoireAudioOperationCompleted;
        
        private System.Threading.SendOrPostCallback NewRepertoireAudioOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Server() {
            this.Url = global::HomiTest.Properties.Settings.Default.HomiTest_HmdService_Server;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event ReturnTriggerByIdCompletedEventHandler ReturnTriggerByIdCompleted;
        
        /// <remarks/>
        public event DeleteTriggerCompletedEventHandler DeleteTriggerCompleted;
        
        /// <remarks/>
        public event SaveTriggerCompletedEventHandler SaveTriggerCompleted;
        
        /// <remarks/>
        public event ListMethodCompletedEventHandler ListMethodCompleted;
        
        /// <remarks/>
        public event Get4LogCompletedEventHandler Get4LogCompleted;
        
        /// <remarks/>
        public event GetTypeLogEnableCompletedEventHandler GetTypeLogEnableCompleted;
        
        /// <remarks/>
        public event SetTypeLogEnableCompletedEventHandler SetTypeLogEnableCompleted;
        
        /// <remarks/>
        public event SetMaxMonthLogCompletedEventHandler SetMaxMonthLogCompleted;
        
        /// <remarks/>
        public event GetMaxMonthLogCompletedEventHandler GetMaxMonthLogCompleted;
        
        /// <remarks/>
        public event LogCompletedEventHandler LogCompleted;
        
        /// <remarks/>
        public event ReturnLogCompletedEventHandler ReturnLogCompleted;
        
        /// <remarks/>
        public event SetMaxFileSizeLogCompletedEventHandler SetMaxFileSizeLogCompleted;
        
        /// <remarks/>
        public event GetMaxFileSizeLogCompletedEventHandler GetMaxFileSizeLogCompleted;
        
        /// <remarks/>
        public event GetSMTPServeurCompletedEventHandler GetSMTPServeurCompleted;
        
        /// <remarks/>
        public event SetSMTPServeurCompletedEventHandler SetSMTPServeurCompleted;
        
        /// <remarks/>
        public event GetSMTPLoginCompletedEventHandler GetSMTPLoginCompleted;
        
        /// <remarks/>
        public event SetSMTPLoginCompletedEventHandler SetSMTPLoginCompleted;
        
        /// <remarks/>
        public event GetSMTPPasswordCompletedEventHandler GetSMTPPasswordCompleted;
        
        /// <remarks/>
        public event SetSMTPPasswordCompletedEventHandler SetSMTPPasswordCompleted;
        
        /// <remarks/>
        public event GetSMTPMailServeurCompletedEventHandler GetSMTPMailServeurCompleted;
        
        /// <remarks/>
        public event SetSMTPMailServeurCompletedEventHandler SetSMTPMailServeurCompleted;
        
        /// <remarks/>
        public event GetListOfTemplateCompletedEventHandler GetListOfTemplateCompleted;
        
        /// <remarks/>
        public event CreateNewTemplateCompletedEventHandler CreateNewTemplateCompleted;
        
        /// <remarks/>
        public event StartLearningCompletedEventHandler StartLearningCompleted;
        
        /// <remarks/>
        public event SaveTemplateCompletedEventHandler SaveTemplateCompleted;
        
        /// <remarks/>
        public event TelecommandeSendCommandCompletedEventHandler TelecommandeSendCommandCompleted;
        
        /// <remarks/>
        public event EnableRepertoireAudioCompletedEventHandler EnableRepertoireAudioCompleted;
        
        /// <remarks/>
        public event GetAllRepertoiresAudioCompletedEventHandler GetAllRepertoiresAudioCompleted;
        
        /// <remarks/>
        public event GetAllExtensionsAudioCompletedEventHandler GetAllExtensionsAudioCompleted;
        
        /// <remarks/>
        public event DeleteUserCompletedEventHandler DeleteUserCompleted;
        
        /// <remarks/>
        public event VerifLoginCompletedEventHandler VerifLoginCompleted;
        
        /// <remarks/>
        public event ChangePasswordCompletedEventHandler ChangePasswordCompleted;
        
        /// <remarks/>
        public event ReturnUserByUsernameCompletedEventHandler ReturnUserByUsernameCompleted;
        
        /// <remarks/>
        public event GetAllUsersCompletedEventHandler GetAllUsersCompleted;
        
        /// <remarks/>
        public event ReturnUserByIdCompletedEventHandler ReturnUserByIdCompleted;
        
        /// <remarks/>
        public event SaveUserCompletedEventHandler SaveUserCompleted;
        
        /// <remarks/>
        public event GetAllDevicesCompletedEventHandler GetAllDevicesCompleted;
        
        /// <remarks/>
        public event ExecuteDeviceCommandCompletedEventHandler ExecuteDeviceCommandCompleted;
        
        /// <remarks/>
        public event DeleteDeviceCompletedEventHandler DeleteDeviceCompleted;
        
        /// <remarks/>
        public event DeleteDeviceCommandIRCompletedEventHandler DeleteDeviceCommandIRCompleted;
        
        /// <remarks/>
        public event ReturnDeviceByIDCompletedEventHandler ReturnDeviceByIDCompleted;
        
        /// <remarks/>
        public event ReturnDeviceByAdresse1TypeDriverCompletedEventHandler ReturnDeviceByAdresse1TypeDriverCompleted;
        
        /// <remarks/>
        public event SaveDeviceCompletedEventHandler SaveDeviceCompleted;
        
        /// <remarks/>
        public event SaveDeviceCommandIRCompletedEventHandler SaveDeviceCommandIRCompleted;
        
        /// <remarks/>
        public event StartIrLearningCompletedEventHandler StartIrLearningCompleted;
        
        /// <remarks/>
        public event VerifChampCompletedEventHandler VerifChampCompleted;
        
        /// <remarks/>
        public event GetAllDriversCompletedEventHandler GetAllDriversCompleted;
        
        /// <remarks/>
        public event ExecuteDriverCommandCompletedEventHandler ExecuteDriverCommandCompleted;
        
        /// <remarks/>
        public event ReturnDriverByIDCompletedEventHandler ReturnDriverByIDCompleted;
        
        /// <remarks/>
        public event DeleteDriverCompletedEventHandler DeleteDriverCompleted;
        
        /// <remarks/>
        public event ReturnDriverByNomCompletedEventHandler ReturnDriverByNomCompleted;
        
        /// <remarks/>
        public event SaveDriverCompletedEventHandler SaveDriverCompleted;
        
        /// <remarks/>
        public event StopDriverCompletedEventHandler StopDriverCompleted;
        
        /// <remarks/>
        public event StartDriverCompletedEventHandler StartDriverCompleted;
        
        /// <remarks/>
        public event ZoneIsEmptyCompletedEventHandler ZoneIsEmptyCompleted;
        
        /// <remarks/>
        public event DeleteZoneCompletedEventHandler DeleteZoneCompleted;
        
        /// <remarks/>
        public event GetAllZonesCompletedEventHandler GetAllZonesCompleted;
        
        /// <remarks/>
        public event GetDeviceInZoneCompletedEventHandler GetDeviceInZoneCompleted;
        
        /// <remarks/>
        public event ReturnZoneByIDCompletedEventHandler ReturnZoneByIDCompleted;
        
        /// <remarks/>
        public event SaveZoneCompletedEventHandler SaveZoneCompleted;
        
        /// <remarks/>
        public event AddDeviceToZoneCompletedEventHandler AddDeviceToZoneCompleted;
        
        /// <remarks/>
        public event DeleteDeviceToZoneCompletedEventHandler DeleteDeviceToZoneCompleted;
        
        /// <remarks/>
        public event DeleteMacroCompletedEventHandler DeleteMacroCompleted;
        
        /// <remarks/>
        public event RunMacroCompletedEventHandler RunMacroCompleted;
        
        /// <remarks/>
        public event GetAllMacrosCompletedEventHandler GetAllMacrosCompleted;
        
        /// <remarks/>
        public event ReturnMacroByIdCompletedEventHandler ReturnMacroByIdCompleted;
        
        /// <remarks/>
        public event SaveMacroCompletedEventHandler SaveMacroCompleted;
        
        /// <remarks/>
        public event GetAllTriggersCompletedEventHandler GetAllTriggersCompleted;
        
        /// <remarks/>
        public event UploadFileCompletedEventHandler UploadFileCompleted;
        
        /// <remarks/>
        public event GetAllVoiceCompletedEventHandler GetAllVoiceCompleted;
        
        /// <remarks/>
        public event GetDefautVoiceCompletedEventHandler GetDefautVoiceCompleted;
        
        /// <remarks/>
        public event SetDefautVoiceCompletedEventHandler SetDefautVoiceCompleted;
        
        /// <remarks/>
        public event CanDeleteCompletedEventHandler CanDeleteCompleted;
        
        /// <remarks/>
        public event GetTimeSaveCompletedEventHandler GetTimeSaveCompleted;
        
        /// <remarks/>
        public event SetTimeSaveCompletedEventHandler SetTimeSaveCompleted;
        
        /// <remarks/>
        public event GetIdServerCompletedEventHandler GetIdServerCompleted;
        
        /// <remarks/>
        public event SetIdServerCompletedEventHandler SetIdServerCompleted;
        
        /// <remarks/>
        public event GetServerVersionCompletedEventHandler GetServerVersionCompleted;
        
        /// <remarks/>
        public event GetTimeCompletedEventHandler GetTimeCompleted;
        
        /// <remarks/>
        public event MessageToServerCompletedEventHandler MessageToServerCompleted;
        
        /// <remarks/>
        public event SaveConfigCompletedEventHandler SaveConfigCompleted;
        
        /// <remarks/>
        public event ExportConfigCompletedEventHandler ExportConfigCompleted;
        
        /// <remarks/>
        public event ImportConfigCompletedEventHandler ImportConfigCompleted;
        
        /// <remarks/>
        public event StartCompletedEventHandler StartCompleted;
        
        /// <remarks/>
        public event StopCompletedEventHandler StopCompleted;
        
        /// <remarks/>
        public event ReStartCompletedEventHandler ReStartCompleted;
        
        /// <remarks/>
        public event SetPortSOAPCompletedEventHandler SetPortSOAPCompleted;
        
        /// <remarks/>
        public event GetPortSOAPCompletedEventHandler GetPortSOAPCompleted;
        
        /// <remarks/>
        public event SetIPSOAPCompletedEventHandler SetIPSOAPCompleted;
        
        /// <remarks/>
        public event GetIPSOAPCompletedEventHandler GetIPSOAPCompleted;
        
        /// <remarks/>
        public event GetLastStartTimeCompletedEventHandler GetLastStartTimeCompleted;
        
        /// <remarks/>
        public event GetHeureLeverSoleilCompletedEventHandler GetHeureLeverSoleilCompleted;
        
        /// <remarks/>
        public event GetHeureCoucherSoleilCompletedEventHandler GetHeureCoucherSoleilCompleted;
        
        /// <remarks/>
        public event GetLongitudeCompletedEventHandler GetLongitudeCompleted;
        
        /// <remarks/>
        public event SetLongitudeCompletedEventHandler SetLongitudeCompleted;
        
        /// <remarks/>
        public event GetLatitudeCompletedEventHandler GetLatitudeCompleted;
        
        /// <remarks/>
        public event SetLatitudeCompletedEventHandler SetLatitudeCompleted;
        
        /// <remarks/>
        public event GetHeureCorrectionCoucherCompletedEventHandler GetHeureCorrectionCoucherCompleted;
        
        /// <remarks/>
        public event SetHeureCorrectionCoucherCompletedEventHandler SetHeureCorrectionCoucherCompleted;
        
        /// <remarks/>
        public event GetHeureCorrectionLeverCompletedEventHandler GetHeureCorrectionLeverCompleted;
        
        /// <remarks/>
        public event SetHeureCorrectionLeverCompletedEventHandler SetHeureCorrectionLeverCompleted;
        
        /// <remarks/>
        public event GetByteFromImageCompletedEventHandler GetByteFromImageCompleted;
        
        /// <remarks/>
        public event GetListOfImageCompletedEventHandler GetListOfImageCompleted;
        
        /// <remarks/>
        public event GetAllListHistoCompletedEventHandler GetAllListHistoCompleted;
        
        /// <remarks/>
        public event GetHistoCompletedEventHandler GetHistoCompleted;
        
        /// <remarks/>
        public event DeleteExtensionAudioCompletedEventHandler DeleteExtensionAudioCompleted;
        
        /// <remarks/>
        public event NewExtensionAudioCompletedEventHandler NewExtensionAudioCompleted;
        
        /// <remarks/>
        public event EnableExtensionAudioCompletedEventHandler EnableExtensionAudioCompleted;
        
        /// <remarks/>
        public event DeleteRepertoireAudioCompletedEventHandler DeleteRepertoireAudioCompleted;
        
        /// <remarks/>
        public event NewRepertoireAudioCompletedEventHandler NewRepertoireAudioCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HoMIDom/IHoMIDom/ReturnTriggerById", RequestNamespace="http://HoMIDom/", ResponseNamespace="http://HoMIDom/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Trigger ReturnTriggerById([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string IdSrv, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string TriggerId) {
            object[] results = this.Invoke("ReturnTriggerById", new object[] {
                        IdSrv,
                        TriggerId});
            return ((Trigger)(results[0]));
        }
        
        /// <remarks/>
        public void ReturnTriggerByIdAsync(string IdSrv, string TriggerId) {
            this.ReturnTriggerByIdAsync(IdSrv, TriggerId, null);
        }
        
        /// <remarks/>
        public void ReturnTriggerByIdAsync(string IdSrv, string TriggerId, object userState) {
            if ((this.ReturnTriggerByIdOperationCompleted == null)) {
                this.ReturnTriggerByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReturnTriggerByIdOperationCompleted);
            }
            this.InvokeAsync("ReturnTriggerById", new object[] {
                        IdSrv,
                        TriggerId}, this.ReturnTriggerByIdOperationCompleted, userState);
        }
        
        private void OnReturnTriggerByIdOperationCompleted(object arg) {
            if ((this.ReturnTriggerByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReturnTriggerByIdCompleted(this, new ReturnTriggerByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HoMIDom/IHoMIDom/DeleteTrigger", RequestNamespace="http://HoMIDom/", ResponseNamespace="http://HoMIDom/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteTrigger([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string IdSrv, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string triggerId, out int DeleteTriggerResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool DeleteTriggerResultSpecified) {
            object[] results = this.Invoke("DeleteTrigger", new object[] {
                        IdSrv,
                        triggerId});
            DeleteTriggerResult = ((int)(results[0]));
            DeleteTriggerResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void DeleteTriggerAsync(string IdSrv, string triggerId) {
            this.DeleteTriggerAsync(IdSrv, triggerId, null);
        }
        
        /// <remarks/>
        public void DeleteTriggerAsync(string IdSrv, string triggerId, object userState) {
            if ((this.DeleteTriggerOperationCompleted == null)) {
                this.DeleteTriggerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteTriggerOperationCompleted);
            }
            this.InvokeAsync("DeleteTrigger", new object[] {
                        IdSrv,
                        triggerId}, this.DeleteTriggerOperationCompleted, userState);
        }
        
        private void OnDeleteTriggerOperationCompleted(object arg) {
            if ((this.DeleteTriggerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteTriggerCompleted(this, new DeleteTriggerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HoMIDom/IHoMIDom/SaveTrigger", RequestNamespace="http://HoMIDom/", ResponseNamespace="http://HoMIDom/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string SaveTrigger([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string IdSrv, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string triggerId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string nom, bool enable, [System.Xml.Serialization.XmlIgnoreAttribute()] bool enableSpecified, TriggerTypeTrigger TypeTrigger, [System.Xml.Serialization.XmlIgnoreAttribute()] bool TypeTriggerSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string description, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string conditiontimer, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string deviceid, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string deviceproperty, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")] string[] macro) {
            object[] results = this.Invoke("SaveTrigger", new object[] {
                        IdSrv,
                        triggerId,
                        nom,
                        enable,
                        enableSpecified,
                        TypeTrigger,
                        TypeTriggerSpecified,
                        description,
                        conditiontimer,
                        deviceid,
                        deviceproperty,
                        macro});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SaveTriggerAsync(string IdSrv, string triggerId, string nom, bool enable, bool enableSpecified, TriggerTypeTrigger TypeTrigger, bool TypeTriggerSpecified, string description, string conditiontimer, string deviceid, string deviceproperty, string[] macro) {
            this.SaveTriggerAsync(IdSrv, triggerId, nom, enable, enableSpecified, TypeTrigger, TypeTriggerSpecified, description, conditiontimer, deviceid, deviceproperty, macro, null);
        }
        
        /// <remarks/>
        public void SaveTriggerAsync(string IdSrv, string triggerId, string nom, bool enable, bool enableSpecified, TriggerTypeTrigger TypeTrigger, bool TypeTriggerSpecified, string description, string conditiontimer, string deviceid, string deviceproperty, string[] macro, object userState) {
            if ((this.SaveTriggerOperationCompleted == null)) {
                this.SaveTriggerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveTriggerOperationCompleted);
            }
            this.InvokeAsync("SaveTrigger", new object[] {
                        IdSrv,
                        triggerId,
                        nom,
                        enable,
                        enableSpecified,
                        TypeTrigger,
                        TypeTriggerSpecified,
                        description,
                        conditiontimer,
                        deviceid,
                        deviceproperty,
                        macro}, this.SaveTriggerOperationCompleted, userState);
        }
        
        private void OnSaveTriggerOperationCompleted(object arg) {
            if ((this.SaveTriggerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveTriggerCompleted(this, new SaveTriggerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HoMIDom/IHoMIDom/ListMethod", RequestNamespace="http://HoMIDom/", ResponseNamespace="http://HoMIDom/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public string[] ListMethod([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string DeviceId) {
            object[] results = this.Invoke("ListMethod", new object[] {
                        DeviceId});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void ListMethodAsync(string DeviceId) {
            this.ListMethodAsync(DeviceId, null);
        }
        
        /// <remarks/>
        public void ListMethodAsync(string DeviceId, object userState) {
            if ((this.ListMethodOperationCompleted == null)) {
                this.ListMethodOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListMethodOperationCompleted);
            }
            this.InvokeAsync("ListMethod", new object[] {
                        DeviceId}, this.ListMethodOperationCompleted, userState);
        }
        
        private void OnListMethodOperationCompleted(object arg) {
            if ((this.ListMethodCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListMethodCompleted(this, new ListMethodCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HoMIDom/IHoMIDom/Get4Log", RequestNamespace="http://HoMIDom/", ResponseNamespace="http://HoMIDom/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public string[] Get4Log() {
            object[] results = this.Invoke("Get4Log", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void Get4LogAsync() {
            this.Get4LogAsync(null);
        }
        
        /// <remarks/>
        public void Get4LogAsync(object userState) {
            if ((this.Get4LogOperationCompleted == null)) {
                this.Get4LogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet4LogOperationCompleted);
            }
            this.InvokeAsync("Get4Log", new object[0], this.Get4LogOperationCompleted, userState);
        }
        
        private void OnGet4LogOperationCompleted(object arg) {
            if ((this.Get4LogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get4LogCompleted(this, new Get4LogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HoMIDom/IHoMIDom/GetTypeLogEnable", RequestNamespace="http://HoMIDom/", ResponseNamespace="http://HoMIDom/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays", IsNullable=false)]
        public bool[] GetTypeLogEnable() {
            object[] results = this.Invoke("GetTypeLogEnable", new object[0]);
            return ((bool[])(results[0]));
        }
        
        /// <remarks/>
        public void GetTypeLogEnableAsync() {
            this.GetTypeLogEnableAsync(null);
        }
        
        /// <remarks/>
        public void GetTypeLogEnableAsync(object userState) {
            if ((this.GetTypeLogEnableOperationCompleted == null)) {
                this.GetTypeLogEnableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTypeLogEnableOperationCompleted);
            }
            this.InvokeAsync("GetTypeLogEnable", new object[0], this.GetTypeLogEnableOperationCompleted, userState);
        }
        
        private void OnGetTypeLogEnableOperationCompleted(object arg) {
            if ((this.GetTypeLogEnableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTypeLogEnableCompleted(this, new GetTypeLogEnableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HoMIDom/IHoMIDom/SetTypeLogEnable", RequestNamespace="http://HoMIDom/", ResponseNamespace="http://HoMIDom/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetTypeLogEnable([System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays", IsNullable=false)] bool[] ListTypeLogEnable) {
            this.Invoke("SetTypeLogEnable", new object[] {
                        ListTypeLogEnable});
        }
        
        /// <remarks/>
        public void SetTypeLogEnableAsync(bool[] ListTypeLogEnable) {
            this.SetTypeLogEnableAsync(ListTypeLogEnable, null);
        }
        
        /// <remarks/>
        public void SetTypeLogEnableAsync(bool[] ListTypeLogEnable, object userState) {
            if ((this.SetTypeLogEnableOperationCompleted == null)) {
                this.SetTypeLogEnableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetTypeLogEnableOperationCompleted);
            }
            this.InvokeAsync("SetTypeLogEnable", new object[] {
                        ListTypeLogEnable}, this.SetTypeLogEnableOperationCompleted, userState);
        }
        
        private void OnSetTypeLogEnableOperationCompleted(object arg) {
            if ((this.SetTypeLogEnableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetTypeLogEnableCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HoMIDom/IHoMIDom/SetMaxMonthLog", RequestNamespace="http://HoMIDom/", ResponseNamespace="http://HoMIDom/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetMaxMonthLog(int Month, [System.Xml.Serialization.XmlIgnoreAttribute()] bool MonthSpecified) {
            this.Invoke("SetMaxMonthLog", new object[] {
                        Month,
                        MonthSpecified});
        }
        
        /// <remarks/>
        public void SetMaxMonthLogAsync(int Month, bool MonthSpecified) {
            this.SetMaxMonthLogAsync(Month, MonthSpecified, null);
        }
        
        /// <remarks/>
        public void SetMaxMonthLogAsync(int Month, bool MonthSpecified, object userState) {
            if ((this.SetMaxMonthLogOperationCompleted == null)) {
                this.SetMaxMonthLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetMaxMonthLogOperationCompleted);
            }
            this.InvokeAsync("SetMaxMonthLog", new object[] {
                        Month,
                        MonthSpecified}, this.SetMaxMonthLogOperationCompleted, userState);
        }
        
        private void OnSetMaxMonthLogOperationCompleted(object arg) {
            if ((this.SetMaxMonthLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetMaxMonthLogCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HoMIDom/IHoMIDom/GetMaxMonthLog", RequestNamespace="http://HoMIDom/", ResponseNamespace="http://HoMIDom/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetMaxMonthLog(out int GetMaxMonthLogResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool GetMaxMonthLogResultSpecified) {
            object[] results = this.Invoke("GetMaxMonthLog", new object[0]);
            GetMaxMonthLogResult = ((int)(results[0]));
            GetMaxMonthLogResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void GetMaxMonthLogAsync() {
            this.GetMaxMonthLogAsync(null);
        }
        
        /// <remarks/>
        public void GetMaxMonthLogAsync(object userState) {
            if ((this.GetMaxMonthLogOperationCompleted == null)) {
                this.GetMaxMonthLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMaxMonthLogOperationCompleted);
            }
            this.InvokeAsync("GetMaxMonthLog", new object[0], this.GetMaxMonthLogOperationCompleted, userState);
        }
        
        private void OnGetMaxMonthLogOperationCompleted(object arg) {
            if ((this.GetMaxMonthLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMaxMonthLogCompleted(this, new GetMaxMonthLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HoMIDom/IHoMIDom/Log", RequestNamespace="http://HoMIDom/", ResponseNamespace="http://HoMIDom/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Log(ServerTypeLog TypLog, [System.Xml.Serialization.XmlIgnoreAttribute()] bool TypLogSpecified, ServerTypeSource Source, [System.Xml.Serialization.XmlIgnoreAttribute()] bool SourceSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Fonction, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Message) {
            this.Invoke("Log", new object[] {
                        TypLog,
                        TypLogSpecified,
                        Source,
                        SourceSpecified,
                        Fonction,
                        Message});
        }
        
        /// <remarks/>
        public void LogAsync(ServerTypeLog TypLog, bool TypLogSpecified, ServerTypeSource Source, bool SourceSpecified, string Fonction, string Message) {
            this.LogAsync(TypLog, TypLogSpecified, Source, SourceSpecified, Fonction, Message, null);
        }
        
        /// <remarks/>
        public void LogAsync(ServerTypeLog TypLog, bool TypLogSpecified, ServerTypeSource Source, bool SourceSpecified, string Fonction, string Message, object userState) {
            if ((this.LogOperationCompleted == null)) {
                this.LogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLogOperationCompleted);
            }
            this.InvokeAsync("Log", new object[] {
                        TypLog,
                        TypLogSpecified,
                        Source,
                        SourceSpecified,
                        Fonction,
                        Message}, this.LogOperationCompleted, userState);
        }
        
        private void OnLogOperationCompleted(object arg) {
            if ((this.LogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LogCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HoMIDom/IHoMIDom/ReturnLog", RequestNamespace="http://HoMIDom/", ResponseNamespace="http://HoMIDom/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ReturnLog([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Requete) {
            object[] results = this.Invoke("ReturnLog", new object[] {
                        Requete});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ReturnLogAsync(string Requete) {
            this.ReturnLogAsync(Requete, null);
        }
        
        /// <remarks/>
        public void ReturnLogAsync(string Requete, object userState) {
            if ((this.ReturnLogOperationCompleted == null)) {
                this.ReturnLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReturnLogOperationCompleted);
            }
            this.InvokeAsync("ReturnLog", new object[] {
                        Requete}, this.ReturnLogOperationCompleted, userState);
        }
        
        private void OnReturnLogOperationCompleted(object arg) {
            if ((this.ReturnLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReturnLogCompleted(this, new ReturnLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HoMIDom/IHoMIDom/SetMaxFileSizeLog", RequestNamespace="http://HoMIDom/", ResponseNamespace="http://HoMIDom/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetMaxFileSizeLog(long Value, [System.Xml.Serialization.XmlIgnoreAttribute()] bool ValueSpecified) {
            this.Invoke("SetMaxFileSizeLog", new object[] {
                        Value,
                        ValueSpecified});
        }
        
        /// <remarks/>
        public void SetMaxFileSizeLogAsync(long Value, bool ValueSpecified) {
            this.SetMaxFileSizeLogAsync(Value, ValueSpecified, null);
        }
        
        /// <remarks/>
        public void SetMaxFileSizeLogAsync(long Value, bool ValueSpecified, object userState) {
            if ((this.SetMaxFileSizeLogOperationCompleted == null)) {
                this.SetMaxFileSizeLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetMaxFileSizeLogOperationCompleted);
            }
            this.InvokeAsync("SetMaxFileSizeLog", new object[] {
                        Value,
                        ValueSpecified}, this.SetMaxFileSizeLogOperationCompleted, userState);
        }
        
        private void OnSetMaxFileSizeLogOperationCompleted(object arg) {
            if ((this.SetMaxFileSizeLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetMaxFileSizeLogCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HoMIDom/IHoMIDom/GetMaxFileSizeLog", RequestNamespace="http://HoMIDom/", ResponseNamespace="http://HoMIDom/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetMaxFileSizeLog(out long GetMaxFileSizeLogResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool GetMaxFileSizeLogResultSpecified) {
            object[] results = this.Invoke("GetMaxFileSizeLog", new object[0]);
            GetMaxFileSizeLogResult = ((long)(results[0]));
            GetMaxFileSizeLogResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void GetMaxFileSizeLogAsync() {
            this.GetMaxFileSizeLogAsync(null);
        }
        
        /// <remarks/>
        public void GetMaxFileSizeLogAsync(object userState) {
            if ((this.GetMaxFileSizeLogOperationCompleted == null)) {
                this.GetMaxFileSizeLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMaxFileSizeLogOperationCompleted);
            }
            this.InvokeAsync("GetMaxFileSizeLog", new object[0], this.GetMaxFileSizeLogOperationCompleted, userState);
        }
        
        private void OnGetMaxFileSizeLogOperationCompleted(object arg) {
            if ((this.GetMaxFileSizeLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMaxFileSizeLogCompleted(this, new GetMaxFileSizeLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HoMIDom/IHoMIDom/GetSMTPServeur", RequestNamespace="http://HoMIDom/", ResponseNamespace="http://HoMIDom/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string GetSMTPServeur([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string IdSrv) {
            object[] results = this.Invoke("GetSMTPServeur", new object[] {
                        IdSrv});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetSMTPServeurAsync(string IdSrv) {
            this.GetSMTPServeurAsync(IdSrv, null);
        }
        
        /// <remarks/>
        public void GetSMTPServeurAsync(string IdSrv, object userState) {
            if ((this.GetSMTPServeurOperationCompleted == null)) {
                this.GetSMTPServeurOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSMTPServeurOperationCompleted);
            }
            this.InvokeAsync("GetSMTPServeur", new object[] {
                        IdSrv}, this.GetSMTPServeurOperationCompleted, userState);
        }
        
        private void OnGetSMTPServeurOperationCompleted(object arg) {
            if ((this.GetSMTPServeurCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSMTPServeurCompleted(this, new GetSMTPServeurCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HoMIDom/IHoMIDom/SetSMTPServeur", RequestNamespace="http://HoMIDom/", ResponseNamespace="http://HoMIDom/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetSMTPServeur([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string IdSrv, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Value) {
            this.Invoke("SetSMTPServeur", new object[] {
                        IdSrv,
                        Value});
        }
        
        /// <remarks/>
        public void SetSMTPServeurAsync(string IdSrv, string Value) {
            this.SetSMTPServeurAsync(IdSrv, Value, null);
        }
        
        /// <remarks/>
        public void SetSMTPServeurAsync(string IdSrv, string Value, object userState) {
            if ((this.SetSMTPServeurOperationCompleted == null)) {
                this.SetSMTPServeurOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetSMTPServeurOperationCompleted);
            }
            this.InvokeAsync("SetSMTPServeur", new object[] {
                        IdSrv,
                        Value}, this.SetSMTPServeurOperationCompleted, userState);
        }
        
        private void OnSetSMTPServeurOperationCompleted(object arg) {
            if ((this.SetSMTPServeurCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetSMTPServeurCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HoMIDom/IHoMIDom/GetSMTPLogin", RequestNamespace="http://HoMIDom/", ResponseNamespace="http://HoMIDom/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string GetSMTPLogin([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string IdSrv) {
            object[] results = this.Invoke("GetSMTPLogin", new object[] {
                        IdSrv});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetSMTPLoginAsync(string IdSrv) {
            this.GetSMTPLoginAsync(IdSrv, null);
        }
        
        /// <remarks/>
        public void GetSMTPLoginAsync(string IdSrv, object userState) {
            if ((this.GetSMTPLoginOperationCompleted == null)) {
                this.GetSMTPLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSMTPLoginOperationCompleted);
            }
            this.InvokeAsync("GetSMTPLogin", new object[] {
                        IdSrv}, this.GetSMTPLoginOperationCompleted, userState);
        }
        
        private void OnGetSMTPLoginOperationCompleted(object arg) {
            if ((this.GetSMTPLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSMTPLoginCompleted(this, new GetSMTPLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HoMIDom/IHoMIDom/SetSMTPLogin", RequestNamespace="http://HoMIDom/", ResponseNamespace="http://HoMIDom/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetSMTPLogin([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string IdSrv, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Value) {
            this.Invoke("SetSMTPLogin", new object[] {
                        IdSrv,
                        Value});
        }
        
        /// <remarks/>
        public void SetSMTPLoginAsync(string IdSrv, string Value) {
            this.SetSMTPLoginAsync(IdSrv, Value, null);
        }
        
        /// <remarks/>
        public void SetSMTPLoginAsync(string IdSrv, string Value, object userState) {
            if ((this.SetSMTPLoginOperationCompleted == null)) {
                this.SetSMTPLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetSMTPLoginOperationCompleted);
            }
            this.InvokeAsync("SetSMTPLogin", new object[] {
                        IdSrv,
                        Value}, this.SetSMTPLoginOperationCompleted, userState);
        }
        
        private void OnSetSMTPLoginOperationCompleted(object arg) {
            if ((this.SetSMTPLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetSMTPLoginCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HoMIDom/IHoMIDom/GetSMTPPassword", RequestNamespace="http://HoMIDom/", ResponseNamespace="http://HoMIDom/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string GetSMTPPassword([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string IdSrv) {
            object[] results = this.Invoke("GetSMTPPassword", new object[] {
                        IdSrv});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetSMTPPasswordAsync(string IdSrv) {
            this.GetSMTPPasswordAsync(IdSrv, null);
        }
        
        /// <remarks/>
        public void GetSMTPPasswordAsync(string IdSrv, object userState) {
            if ((this.GetSMTPPasswordOperationCompleted == null)) {
                this.GetSMTPPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSMTPPasswordOperationCompleted);
            }
            this.InvokeAsync("GetSMTPPassword", new object[] {
                        IdSrv}, this.GetSMTPPasswordOperationCompleted, userState);
        }
        
        private void OnGetSMTPPasswordOperationCompleted(object arg) {
            if ((this.GetSMTPPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSMTPPasswordCompleted(this, new GetSMTPPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HoMIDom/IHoMIDom/SetSMTPPassword", RequestNamespace="http://HoMIDom/", ResponseNamespace="http://HoMIDom/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetSMTPPassword([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string IdSrv, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Value) {
            this.Invoke("SetSMTPPassword", new object[] {
                        IdSrv,
                        Value});
        }
        
        /// <remarks/>
        public void SetSMTPPasswordAsync(string IdSrv, string Value) {
            this.SetSMTPPasswordAsync(IdSrv, Value, null);
        }
        
        /// <remarks/>
        public void SetSMTPPasswordAsync(string IdSrv, string Value, object userState) {
            if ((this.SetSMTPPasswordOperationCompleted == null)) {
                this.SetSMTPPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetSMTPPasswordOperationCompleted);
            }
            this.InvokeAsync("SetSMTPPassword", new object[] {
                        IdSrv,
                        Value}, this.SetSMTPPasswordOperationCompleted, userState);
        }
        
        private void OnSetSMTPPasswordOperationCompleted(object arg) {
            if ((this.SetSMTPPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetSMTPPasswordCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HoMIDom/IHoMIDom/GetSMTPMailServeur", RequestNamespace="http://HoMIDom/", ResponseNamespace="http://HoMIDom/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string GetSMTPMailServeur([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string IdSrv) {
            object[] results = this.Invoke("GetSMTPMailServeur", new object[] {
                        IdSrv});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetSMTPMailServeurAsync(string IdSrv) {
            this.GetSMTPMailServeurAsync(IdSrv, null);
        }
        
        /// <remarks/>
        public void GetSMTPMailServeurAsync(string IdSrv, object userState) {
            if ((this.GetSMTPMailServeurOperationCompleted == null)) {
                this.GetSMTPMailServeurOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSMTPMailServeurOperationCompleted);
            }
            this.InvokeAsync("GetSMTPMailServeur", new object[] {
                        IdSrv}, this.GetSMTPMailServeurOperationCompleted, userState);
        }
        
        private void OnGetSMTPMailServeurOperationCompleted(object arg) {
            if ((this.GetSMTPMailServeurCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSMTPMailServeurCompleted(this, new GetSMTPMailServeurCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HoMIDom/IHoMIDom/SetSMTPMailServeur", RequestNamespace="http://HoMIDom/", ResponseNamespace="http://HoMIDom/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetSMTPMailServeur([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string IdSrv, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Value) {
            this.Invoke("SetSMTPMailServeur", new object[] {
                        IdSrv,
                        Value});
        }
        
        /// <remarks/>
        public void SetSMTPMailServeurAsync(string IdSrv, string Value) {
            this.SetSMTPMailServeurAsync(IdSrv, Value, null);
        }
        
        /// <remarks/>
        public void SetSMTPMailServeurAsync(string IdSrv, string Value, object userState) {
            if ((this.SetSMTPMailServeurOperationCompleted == null)) {
                this.SetSMTPMailServeurOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetSMTPMailServeurOperationCompleted);
            }
            this.InvokeAsync("SetSMTPMailServeur", new object[] {
                        IdSrv,
                        Value}, this.SetSMTPMailServeurOperationCompleted, userState);
        }
        
        private void OnSetSMTPMailServeurOperationCompleted(object arg) {
            if ((this.SetSMTPMailServeurCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetSMTPMailServeurCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HoMIDom/IHoMIDom/GetListOfTemplate", RequestNamespace="http://HoMIDom/", ResponseNamespace="http://HoMIDom/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/HoMIDom.HoMIDom")]
        public TelecommandeTemplate[] GetListOfTemplate() {
            object[] results = this.Invoke("GetListOfTemplate", new object[0]);
            return ((TelecommandeTemplate[])(results[0]));
        }
        
        /// <remarks/>
        public void GetListOfTemplateAsync() {
            this.GetListOfTemplateAsync(null);
        }
        
        /// <remarks/>
        public void GetListOfTemplateAsync(object userState) {
            if ((this.GetListOfTemplateOperationCompleted == null)) {
                this.GetListOfTemplateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetListOfTemplateOperationCompleted);
            }
            this.InvokeAsync("GetListOfTemplate", new object[0], this.GetListOfTemplateOperationCompleted, userState);
        }
        
        private void OnGetListOfTemplateOperationCompleted(object arg) {
            if ((this.GetListOfTemplateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetListOfTemplateCompleted(this, new GetListOfTemplateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HoMIDom/IHoMIDom/CreateNewTemplate", RequestNamespace="http://HoMIDom/", ResponseNamespace="http://HoMIDom/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CreateNewTemplate([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Fabricant, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Modele, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Driver, TelecommandeTypeEquipement Type, [System.Xml.Serialization.XmlIgnoreAttribute()] bool TypeSpecified, int Ligne, [System.Xml.Serialization.XmlIgnoreAttribute()] bool LigneSpecified, int Colonne, [System.Xml.Serialization.XmlIgnoreAttribute()] bool ColonneSpecified) {
            object[] results = this.Invoke("CreateNewTemplate", new object[] {
                        Fabricant,
                        Modele,
                        Driver,
                        Type,
                        TypeSpecified,
                        Ligne,
                        LigneSpecified,
                        Colonne,
                        ColonneSpecified});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateNewTemplateAsync(string Fabricant, string Modele, string Driver, TelecommandeTypeEquipement Type, bool TypeSpecified, int Ligne, bool LigneSpecified, int Colonne, bool ColonneSpecified) {
            this.CreateNewTemplateAsync(Fabricant, Modele, Driver, Type, TypeSpecified, Ligne, LigneSpecified, Colonne, ColonneSpecified, null);
        }
        
        /// <remarks/>
        public void CreateNewTemplateAsync(string Fabricant, string Modele, string Driver, TelecommandeTypeEquipement Type, bool TypeSpecified, int Ligne, bool LigneSpecified, int Colonne, bool ColonneSpecified, object userState) {
            if ((this.CreateNewTemplateOperationCompleted == null)) {
                this.CreateNewTemplateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateNewTemplateOperationCompleted);
            }
            this.InvokeAsync("CreateNewTemplate", new object[] {
                        Fabricant,
                        Modele,
                        Driver,
                        Type,
                        TypeSpecified,
                        Ligne,
                        LigneSpecified,
                        Colonne,
                        ColonneSpecified}, this.CreateNewTemplateOperationCompleted, userState);
        }
        
        private void OnCreateNewTemplateOperationCompleted(object arg) {
            if ((this.CreateNewTemplateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateNewTemplateCompleted(this, new CreateNewTemplateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HoMIDom/IHoMIDom/StartLearning", RequestNamespace="http://HoMIDom/", ResponseNamespace="http://HoMIDom/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string StartLearning([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string IdSrv, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string DriverId) {
            object[] results = this.Invoke("StartLearning", new object[] {
                        IdSrv,
                        DriverId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void StartLearningAsync(string IdSrv, string DriverId) {
            this.StartLearningAsync(IdSrv, DriverId, null);
        }
        
        /// <remarks/>
        public void StartLearningAsync(string IdSrv, string DriverId, object userState) {
            if ((this.StartLearningOperationCompleted == null)) {
                this.StartLearningOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStartLearningOperationCompleted);
            }
            this.InvokeAsync("StartLearning", new object[] {
                        IdSrv,
                        DriverId}, this.StartLearningOperationCompleted, userState);
        }
        
        private void OnStartLearningOperationCompleted(object arg) {
            if ((this.StartLearningCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StartLearningCompleted(this, new StartLearningCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HoMIDom/IHoMIDom/SaveTemplate", RequestNamespace="http://HoMIDom/", ResponseNamespace="http://HoMIDom/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string SaveTemplate([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string IdSrv, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Template, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/HoMIDom.HoMIDom")] TelecommandeCommandes[] Commandes, int Ligne, [System.Xml.Serialization.XmlIgnoreAttribute()] bool LigneSpecified, int Colonne, [System.Xml.Serialization.XmlIgnoreAttribute()] bool ColonneSpecified) {
            object[] results = this.Invoke("SaveTemplate", new object[] {
                        IdSrv,
                        Template,
                        Commandes,
                        Ligne,
                        LigneSpecified,
                        Colonne,
                        ColonneSpecified});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SaveTemplateAsync(string IdSrv, string Template, TelecommandeCommandes[] Commandes, int Ligne, bool LigneSpecified, int Colonne, bool ColonneSpecified) {
            this.SaveTemplateAsync(IdSrv, Template, Commandes, Ligne, LigneSpecified, Colonne, ColonneSpecified, null);
        }
        
        /// <remarks/>
        public void SaveTemplateAsync(string IdSrv, string Template, TelecommandeCommandes[] Commandes, int Ligne, bool LigneSpecified, int Colonne, bool ColonneSpecified, object userState) {
            if ((this.SaveTemplateOperationCompleted == null)) {
                this.SaveTemplateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveTemplateOperationCompleted);
            }
            this.InvokeAsync("SaveTemplate", new object[] {
                        IdSrv,
                        Template,
                        Commandes,
                        Ligne,
                        LigneSpecified,
                        Colonne,
                        ColonneSpecified}, this.SaveTemplateOperationCompleted, userState);
        }
        
        private void OnSaveTemplateOperationCompleted(object arg) {
            if ((this.SaveTemplateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveTemplateCompleted(this, new SaveTemplateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HoMIDom/IHoMIDom/TelecommandeSendCommand", RequestNamespace="http://HoMIDom/", ResponseNamespace="http://HoMIDom/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string TelecommandeSendCommand([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string IdSrv, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string IdDevice, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Commande) {
            object[] results = this.Invoke("TelecommandeSendCommand", new object[] {
                        IdSrv,
                        IdDevice,
                        Commande});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void TelecommandeSendCommandAsync(string IdSrv, string IdDevice, string Commande) {
            this.TelecommandeSendCommandAsync(IdSrv, IdDevice, Commande, null);
        }
        
        /// <remarks/>
        public void TelecommandeSendCommandAsync(string IdSrv, string IdDevice, string Commande, object userState) {
            if ((this.TelecommandeSendCommandOperationCompleted == null)) {
                this.TelecommandeSendCommandOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTelecommandeSendCommandOperationCompleted);
            }
            this.InvokeAsync("TelecommandeSendCommand", new object[] {
                        IdSrv,
                        IdDevice,
                        Commande}, this.TelecommandeSendCommandOperationCompleted, userState);
        }
        
        private void OnTelecommandeSendCommandOperationCompleted(object arg) {
            if ((this.TelecommandeSendCommandCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TelecommandeSendCommandCompleted(this, new TelecommandeSendCommandCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HoMIDom/IHoMIDom/EnableRepertoireAudio", RequestNamespace="http://HoMIDom/", ResponseNamespace="http://HoMIDom/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EnableRepertoireAudio([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string IdSrv, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string NomRepertoire, bool Enable, [System.Xml.Serialization.XmlIgnoreAttribute()] bool EnableSpecified, out int EnableRepertoireAudioResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool EnableRepertoireAudioResultSpecified) {
            object[] results = this.Invoke("EnableRepertoireAudio", new object[] {
                        IdSrv,
                        NomRepertoire,
                        Enable,
                        EnableSpecified});
            EnableRepertoireAudioResult = ((int)(results[0]));
            EnableRepertoireAudioResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void EnableRepertoireAudioAsync(string IdSrv, string NomRepertoire, bool Enable, bool EnableSpecified) {
            this.EnableRepertoireAudioAsync(IdSrv, NomRepertoire, Enable, EnableSpecified, null);
        }
        
        /// <remarks/>
        public void EnableRepertoireAudioAsync(string IdSrv, string NomRepertoire, bool Enable, bool EnableSpecified, object userState) {
            if ((this.EnableRepertoireAudioOperationCompleted == null)) {
                this.EnableRepertoireAudioOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEnableRepertoireAudioOperationCompleted);
            }
            this.InvokeAsync("EnableRepertoireAudio", new object[] {
                        IdSrv,
                        NomRepertoire,
                        Enable,
                        EnableSpecified}, this.EnableRepertoireAudioOperationCompleted, userState);
        }
        
        private void OnEnableRepertoireAudioOperationCompleted(object arg) {
            if ((this.EnableRepertoireAudioCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EnableRepertoireAudioCompleted(this, new EnableRepertoireAudioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HoMIDom/IHoMIDom/GetAllRepertoiresAudio", RequestNamespace="http://HoMIDom/", ResponseNamespace="http://HoMIDom/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/HoMIDom.HoMIDom")]
        public AudioRepertoireAudio[] GetAllRepertoiresAudio([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string IdSrv) {
            object[] results = this.Invoke("GetAllRepertoiresAudio", new object[] {
                        IdSrv});
            return ((AudioRepertoireAudio[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllRepertoiresAudioAsync(string IdSrv) {
            this.GetAllRepertoiresAudioAsync(IdSrv, null);
        }
        
        /// <remarks/>
        public void GetAllRepertoiresAudioAsync(string IdSrv, object userState) {
            if ((this.GetAllRepertoiresAudioOperationCompleted == null)) {
                this.GetAllRepertoiresAudioOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllRepertoiresAudioOperationCompleted);
            }
            this.InvokeAsync("GetAllRepertoiresAudio", new object[] {
                        IdSrv}, this.GetAllRepertoiresAudioOperationCompleted, userState);
        }
        
        private void OnGetAllRepertoiresAudioOperationCompleted(object arg) {
            if ((this.GetAllRepertoiresAudioCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllRepertoiresAudioCompleted(this, new GetAllRepertoiresAudioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HoMIDom/IHoMIDom/GetAllExtensionsAudio", RequestNamespace="http://HoMIDom/", ResponseNamespace="http://HoMIDom/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/HoMIDom.HoMIDom")]
        public AudioExtensionAudio[] GetAllExtensionsAudio([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string IdSrv) {
            object[] results = this.Invoke("GetAllExtensionsAudio", new object[] {
                        IdSrv});
            return ((AudioExtensionAudio[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllExtensionsAudioAsync(string IdSrv) {
            this.GetAllExtensionsAudioAsync(IdSrv, null);
        }
        
        /// <remarks/>
        public void GetAllExtensionsAudioAsync(string IdSrv, object userState) {
            if ((this.GetAllExtensionsAudioOperationCompleted == null)) {
                this.GetAllExtensionsAudioOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllExtensionsAudioOperationCompleted);
            }
            this.InvokeAsync("GetAllExtensionsAudio", new object[] {
                        IdSrv}, this.GetAllExtensionsAudioOperationCompleted, userState);
        }
        
        private void OnGetAllExtensionsAudioOperationCompleted(object arg) {
            if ((this.GetAllExtensionsAudioCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllExtensionsAudioCompleted(this, new GetAllExtensionsAudioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HoMIDom/IHoMIDom/DeleteUser", RequestNamespace="http://HoMIDom/", ResponseNamespace="http://HoMIDom/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteUser([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string IdSrv, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userId, out int DeleteUserResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool DeleteUserResultSpecified) {
            object[] results = this.Invoke("DeleteUser", new object[] {
                        IdSrv,
                        userId});
            DeleteUserResult = ((int)(results[0]));
            DeleteUserResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void DeleteUserAsync(string IdSrv, string userId) {
            this.DeleteUserAsync(IdSrv, userId, null);
        }
        
        /// <remarks/>
        public void DeleteUserAsync(string IdSrv, string userId, object userState) {
            if ((this.DeleteUserOperationCompleted == null)) {
                this.DeleteUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteUserOperationCompleted);
            }
            this.InvokeAsync("DeleteUser", new object[] {
                        IdSrv,
                        userId}, this.DeleteUserOperationCompleted, userState);
        }
        
        private void OnDeleteUserOperationCompleted(object arg) {
            if ((this.DeleteUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteUserCompleted(this, new DeleteUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HoMIDom/IHoMIDom/VerifLogin", RequestNamespace="http://HoMIDom/", ResponseNamespace="http://HoMIDom/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void VerifLogin([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Username, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Password, out bool VerifLoginResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool VerifLoginResultSpecified) {
            object[] results = this.Invoke("VerifLogin", new object[] {
                        Username,
                        Password});
            VerifLoginResult = ((bool)(results[0]));
            VerifLoginResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void VerifLoginAsync(string Username, string Password) {
            this.VerifLoginAsync(Username, Password, null);
        }
        
        /// <remarks/>
        public void VerifLoginAsync(string Username, string Password, object userState) {
            if ((this.VerifLoginOperationCompleted == null)) {
                this.VerifLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifLoginOperationCompleted);
            }
            this.InvokeAsync("VerifLogin", new object[] {
                        Username,
                        Password}, this.VerifLoginOperationCompleted, userState);
        }
        
        private void OnVerifLoginOperationCompleted(object arg) {
            if ((this.VerifLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifLoginCompleted(this, new VerifLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HoMIDom/IHoMIDom/ChangePassword", RequestNamespace="http://HoMIDom/", ResponseNamespace="http://HoMIDom/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ChangePassword([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string IdSrv, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Username, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string OldPassword, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string ConfirmNewPassword, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Password, out bool ChangePasswordResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool ChangePasswordResultSpecified) {
            object[] results = this.Invoke("ChangePassword", new object[] {
                        IdSrv,
                        Username,
                        OldPassword,
                        ConfirmNewPassword,
                        Password});
            ChangePasswordResult = ((bool)(results[0]));
            ChangePasswordResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void ChangePasswordAsync(string IdSrv, string Username, string OldPassword, string ConfirmNewPassword, string Password) {
            this.ChangePasswordAsync(IdSrv, Username, OldPassword, ConfirmNewPassword, Password, null);
        }
        
        /// <remarks/>
        public void ChangePasswordAsync(string IdSrv, string Username, string OldPassword, string ConfirmNewPassword, string Password, object userState) {
            if ((this.ChangePasswordOperationCompleted == null)) {
                this.ChangePasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangePasswordOperationCompleted);
            }
            this.InvokeAsync("ChangePassword", new object[] {
                        IdSrv,
                        Username,
                        OldPassword,
                        ConfirmNewPassword,
                        Password}, this.ChangePasswordOperationCompleted, userState);
        }
        
        private void OnChangePasswordOperationCompleted(object arg) {
            if ((this.ChangePasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangePasswordCompleted(this, new ChangePasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HoMIDom/IHoMIDom/ReturnUserByUsername", RequestNamespace="http://HoMIDom/", ResponseNamespace="http://HoMIDom/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public UsersUser ReturnUserByUsername([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string IdSrv, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Username) {
            object[] results = this.Invoke("ReturnUserByUsername", new object[] {
                        IdSrv,
                        Username});
            return ((UsersUser)(results[0]));
        }
        
        /// <remarks/>
        public void ReturnUserByUsernameAsync(string IdSrv, string Username) {
            this.ReturnUserByUsernameAsync(IdSrv, Username, null);
        }
        
        /// <remarks/>
        public void ReturnUserByUsernameAsync(string IdSrv, string Username, object userState) {
            if ((this.ReturnUserByUsernameOperationCompleted == null)) {
                this.ReturnUserByUsernameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReturnUserByUsernameOperationCompleted);
            }
            this.InvokeAsync("ReturnUserByUsername", new object[] {
                        IdSrv,
                        Username}, this.ReturnUserByUsernameOperationCompleted, userState);
        }
        
        private void OnReturnUserByUsernameOperationCompleted(object arg) {
            if ((this.ReturnUserByUsernameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReturnUserByUsernameCompleted(this, new ReturnUserByUsernameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HoMIDom/IHoMIDom/GetAllUsers", RequestNamespace="http://HoMIDom/", ResponseNamespace="http://HoMIDom/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/HoMIDom.HoMIDom")]
        public UsersUser[] GetAllUsers([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string IdSrv) {
            object[] results = this.Invoke("GetAllUsers", new object[] {
                        IdSrv});
            return ((UsersUser[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllUsersAsync(string IdSrv) {
            this.GetAllUsersAsync(IdSrv, null);
        }
        
        /// <remarks/>
        public void GetAllUsersAsync(string IdSrv, object userState) {
            if ((this.GetAllUsersOperationCompleted == null)) {
                this.GetAllUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllUsersOperationCompleted);
            }
            this.InvokeAsync("GetAllUsers", new object[] {
                        IdSrv}, this.GetAllUsersOperationCompleted, userState);
        }
        
        private void OnGetAllUsersOperationCompleted(object arg) {
            if ((this.GetAllUsersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllUsersCompleted(this, new GetAllUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HoMIDom/IHoMIDom/ReturnUserById", RequestNamespace="http://HoMIDom/", ResponseNamespace="http://HoMIDom/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public UsersUser ReturnUserById([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string IdSrv, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string UserId) {
            object[] results = this.Invoke("ReturnUserById", new object[] {
                        IdSrv,
                        UserId});
            return ((UsersUser)(results[0]));
        }
        
        /// <remarks/>
        public void ReturnUserByIdAsync(string IdSrv, string UserId) {
            this.ReturnUserByIdAsync(IdSrv, UserId, null);
        }
        
        /// <remarks/>
        public void ReturnUserByIdAsync(string IdSrv, string UserId, object userState) {
            if ((this.ReturnUserByIdOperationCompleted == null)) {
                this.ReturnUserByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReturnUserByIdOperationCompleted);
            }
            this.InvokeAsync("ReturnUserById", new object[] {
                        IdSrv,
                        UserId}, this.ReturnUserByIdOperationCompleted, userState);
        }
        
        private void OnReturnUserByIdOperationCompleted(object arg) {
            if ((this.ReturnUserByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReturnUserByIdCompleted(this, new ReturnUserByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HoMIDom/IHoMIDom/SaveUser", RequestNamespace="http://HoMIDom/", ResponseNamespace="http://HoMIDom/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string SaveUser(
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string IdSrv, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userId, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string UserName, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Password, 
                    UsersTypeProfil Profil, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool ProfilSpecified, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Nom, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Prenom, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string NumberIdentification, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Image, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string eMail, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string eMailAutre, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string TelFixe, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string TelMobile, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string TelAutre, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Adresse, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Ville, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string CodePostal) {
            object[] results = this.Invoke("SaveUser", new object[] {
                        IdSrv,
                        userId,
                        UserName,
                        Password,
                        Profil,
                        ProfilSpecified,
                        Nom,
                        Prenom,
                        NumberIdentification,
                        Image,
                        eMail,
                        eMailAutre,
                        TelFixe,
                        TelMobile,
                        TelAutre,
                        Adresse,
                        Ville,
                        CodePostal});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SaveUserAsync(
                    string IdSrv, 
                    string userId, 
                    string UserName, 
                    string Password, 
                    UsersTypeProfil Profil, 
                    bool ProfilSpecified, 
                    string Nom, 
                    string Prenom, 
                    string NumberIdentification, 
                    string Image, 
                    string eMail, 
                    string eMailAutre, 
                    string TelFixe, 
                    string TelMobile, 
                    string TelAutre, 
                    string Adresse, 
                    string Ville, 
                    string CodePostal) {
            this.SaveUserAsync(IdSrv, userId, UserName, Password, Profil, ProfilSpecified, Nom, Prenom, NumberIdentification, Image, eMail, eMailAutre, TelFixe, TelMobile, TelAutre, Adresse, Ville, CodePostal, null);
        }
        
        /// <remarks/>
        public void SaveUserAsync(
                    string IdSrv, 
                    string userId, 
                    string UserName, 
                    string Password, 
                    UsersTypeProfil Profil, 
                    bool ProfilSpecified, 
                    string Nom, 
                    string Prenom, 
                    string NumberIdentification, 
                    string Image, 
                    string eMail, 
                    string eMailAutre, 
                    string TelFixe, 
                    string TelMobile, 
                    string TelAutre, 
                    string Adresse, 
                    string Ville, 
                    string CodePostal, 
                    object userState) {
            if ((this.SaveUserOperationCompleted == null)) {
                this.SaveUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveUserOperationCompleted);
            }
            this.InvokeAsync("SaveUser", new object[] {
                        IdSrv,
                        userId,
                        UserName,
                        Password,
                        Profil,
                        ProfilSpecified,
                        Nom,
                        Prenom,
                        NumberIdentification,
                        Image,
                        eMail,
                        eMailAutre,
                        TelFixe,
                        TelMobile,
                        TelAutre,
                        Adresse,
                        Ville,
                        CodePostal}, this.SaveUserOperationCompleted, userState);
        }
        
        private void OnSaveUserOperationCompleted(object arg) {
            if ((this.SaveUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveUserCompleted(this, new SaveUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HoMIDom/IHoMIDom/GetAllDevices", RequestNamespace="http://HoMIDom/", ResponseNamespace="http://HoMIDom/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/HoMIDom.HoMIDom")]
        public TemplateDevice[] GetAllDevices([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string IdSrv) {
            object[] results = this.Invoke("GetAllDevices", new object[] {
                        IdSrv});
            return ((TemplateDevice[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllDevicesAsync(string IdSrv) {
            this.GetAllDevicesAsync(IdSrv, null);
        }
        
        /// <remarks/>
        public void GetAllDevicesAsync(string IdSrv, object userState) {
            if ((this.GetAllDevicesOperationCompleted == null)) {
                this.GetAllDevicesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllDevicesOperationCompleted);
            }
            this.InvokeAsync("GetAllDevices", new object[] {
                        IdSrv}, this.GetAllDevicesOperationCompleted, userState);
        }
        
        private void OnGetAllDevicesOperationCompleted(object arg) {
            if ((this.GetAllDevicesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllDevicesCompleted(this, new GetAllDevicesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HoMIDom/IHoMIDom/ExecuteDeviceCommand", RequestNamespace="http://HoMIDom/", ResponseNamespace="http://HoMIDom/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ExecuteDeviceCommand([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string IdSrv, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string DeviceId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] DeviceAction Action) {
            this.Invoke("ExecuteDeviceCommand", new object[] {
                        IdSrv,
                        DeviceId,
                        Action});
        }
        
        /// <remarks/>
        public void ExecuteDeviceCommandAsync(string IdSrv, string DeviceId, DeviceAction Action) {
            this.ExecuteDeviceCommandAsync(IdSrv, DeviceId, Action, null);
        }
        
        /// <remarks/>
        public void ExecuteDeviceCommandAsync(string IdSrv, string DeviceId, DeviceAction Action, object userState) {
            if ((this.ExecuteDeviceCommandOperationCompleted == null)) {
                this.ExecuteDeviceCommandOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteDeviceCommandOperationCompleted);
            }
            this.InvokeAsync("ExecuteDeviceCommand", new object[] {
                        IdSrv,
                        DeviceId,
                        Action}, this.ExecuteDeviceCommandOperationCompleted, userState);
        }
        
        private void OnExecuteDeviceCommandOperationCompleted(object arg) {
            if ((this.ExecuteDeviceCommandCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteDeviceCommandCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HoMIDom/IHoMIDom/DeleteDevice", RequestNamespace="http://HoMIDom/", ResponseNamespace="http://HoMIDom/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteDevice([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string IdSrv, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string deviceId, out int DeleteDeviceResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool DeleteDeviceResultSpecified) {
            object[] results = this.Invoke("DeleteDevice", new object[] {
                        IdSrv,
                        deviceId});
            DeleteDeviceResult = ((int)(results[0]));
            DeleteDeviceResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void DeleteDeviceAsync(string IdSrv, string deviceId) {
            this.DeleteDeviceAsync(IdSrv, deviceId, null);
        }
        
        /// <remarks/>
        public void DeleteDeviceAsync(string IdSrv, string deviceId, object userState) {
            if ((this.DeleteDeviceOperationCompleted == null)) {
                this.DeleteDeviceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteDeviceOperationCompleted);
            }
            this.InvokeAsync("DeleteDevice", new object[] {
                        IdSrv,
                        deviceId}, this.DeleteDeviceOperationCompleted, userState);
        }
        
        private void OnDeleteDeviceOperationCompleted(object arg) {
            if ((this.DeleteDeviceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteDeviceCompleted(this, new DeleteDeviceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HoMIDom/IHoMIDom/DeleteDeviceCommandIR", RequestNamespace="http://HoMIDom/", ResponseNamespace="http://HoMIDom/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteDeviceCommandIR([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string IdSrv, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string deviceId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string CmdName, out int DeleteDeviceCommandIRResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool DeleteDeviceCommandIRResultSpecified) {
            object[] results = this.Invoke("DeleteDeviceCommandIR", new object[] {
                        IdSrv,
                        deviceId,
                        CmdName});
            DeleteDeviceCommandIRResult = ((int)(results[0]));
            DeleteDeviceCommandIRResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void DeleteDeviceCommandIRAsync(string IdSrv, string deviceId, string CmdName) {
            this.DeleteDeviceCommandIRAsync(IdSrv, deviceId, CmdName, null);
        }
        
        /// <remarks/>
        public void DeleteDeviceCommandIRAsync(string IdSrv, string deviceId, string CmdName, object userState) {
            if ((this.DeleteDeviceCommandIROperationCompleted == null)) {
                this.DeleteDeviceCommandIROperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteDeviceCommandIROperationCompleted);
            }
            this.InvokeAsync("DeleteDeviceCommandIR", new object[] {
                        IdSrv,
                        deviceId,
                        CmdName}, this.DeleteDeviceCommandIROperationCompleted, userState);
        }
        
        private void OnDeleteDeviceCommandIROperationCompleted(object arg) {
            if ((this.DeleteDeviceCommandIRCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteDeviceCommandIRCompleted(this, new DeleteDeviceCommandIRCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HoMIDom/IHoMIDom/ReturnDeviceByID", RequestNamespace="http://HoMIDom/", ResponseNamespace="http://HoMIDom/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public TemplateDevice ReturnDeviceByID([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string IdSrv, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Id) {
            object[] results = this.Invoke("ReturnDeviceByID", new object[] {
                        IdSrv,
                        Id});
            return ((TemplateDevice)(results[0]));
        }
        
        /// <remarks/>
        public void ReturnDeviceByIDAsync(string IdSrv, string Id) {
            this.ReturnDeviceByIDAsync(IdSrv, Id, null);
        }
        
        /// <remarks/>
        public void ReturnDeviceByIDAsync(string IdSrv, string Id, object userState) {
            if ((this.ReturnDeviceByIDOperationCompleted == null)) {
                this.ReturnDeviceByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReturnDeviceByIDOperationCompleted);
            }
            this.InvokeAsync("ReturnDeviceByID", new object[] {
                        IdSrv,
                        Id}, this.ReturnDeviceByIDOperationCompleted, userState);
        }
        
        private void OnReturnDeviceByIDOperationCompleted(object arg) {
            if ((this.ReturnDeviceByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReturnDeviceByIDCompleted(this, new ReturnDeviceByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HoMIDom/IHoMIDom/ReturnDeviceByAdresse1TypeDriver", RequestNamespace="http://HoMIDom/", ResponseNamespace="http://HoMIDom/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public object[] ReturnDeviceByAdresse1TypeDriver([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string IdSrv, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string DeviceAdresse, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string DeviceType, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string DeviceDriver, bool Enable, [System.Xml.Serialization.XmlIgnoreAttribute()] bool EnableSpecified) {
            object[] results = this.Invoke("ReturnDeviceByAdresse1TypeDriver", new object[] {
                        IdSrv,
                        DeviceAdresse,
                        DeviceType,
                        DeviceDriver,
                        Enable,
                        EnableSpecified});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void ReturnDeviceByAdresse1TypeDriverAsync(string IdSrv, string DeviceAdresse, string DeviceType, string DeviceDriver, bool Enable, bool EnableSpecified) {
            this.ReturnDeviceByAdresse1TypeDriverAsync(IdSrv, DeviceAdresse, DeviceType, DeviceDriver, Enable, EnableSpecified, null);
        }
        
        /// <remarks/>
        public void ReturnDeviceByAdresse1TypeDriverAsync(string IdSrv, string DeviceAdresse, string DeviceType, string DeviceDriver, bool Enable, bool EnableSpecified, object userState) {
            if ((this.ReturnDeviceByAdresse1TypeDriverOperationCompleted == null)) {
                this.ReturnDeviceByAdresse1TypeDriverOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReturnDeviceByAdresse1TypeDriverOperationCompleted);
            }
            this.InvokeAsync("ReturnDeviceByAdresse1TypeDriver", new object[] {
                        IdSrv,
                        DeviceAdresse,
                        DeviceType,
                        DeviceDriver,
                        Enable,
                        EnableSpecified}, this.ReturnDeviceByAdresse1TypeDriverOperationCompleted, userState);
        }
        
        private void OnReturnDeviceByAdresse1TypeDriverOperationCompleted(object arg) {
            if ((this.ReturnDeviceByAdresse1TypeDriverCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReturnDeviceByAdresse1TypeDriverCompleted(this, new ReturnDeviceByAdresse1TypeDriverCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HoMIDom/IHoMIDom/SaveDevice", RequestNamespace="http://HoMIDom/", ResponseNamespace="http://HoMIDom/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string SaveDevice(
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string IdSrv, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string deviceId, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string name, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string address1, 
                    bool enable, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool enableSpecified, 
                    bool solo, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool soloSpecified, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string driverid, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string type, 
                    int refresh, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool refreshSpecified, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string address2, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string image, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string modele, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string description, 
                    int lastchangeduree, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool lastchangedureeSpecified, 
                    bool lastEtat, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool lastEtatSpecified, 
                    double correction, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool correctionSpecified, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string formatage, 
                    double precision, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool precisionSpecified, 
                    double valuemax, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool valuemaxSpecified, 
                    double valuemin, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool valueminSpecified, 
                    double valuedef, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool valuedefSpecified, 
                    [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/HoMIDom.HoMIDom")] TelecommandeCommandes[] Commandes) {
            object[] results = this.Invoke("SaveDevice", new object[] {
                        IdSrv,
                        deviceId,
                        name,
                        address1,
                        enable,
                        enableSpecified,
                        solo,
                        soloSpecified,
                        driverid,
                        type,
                        refresh,
                        refreshSpecified,
                        address2,
                        image,
                        modele,
                        description,
                        lastchangeduree,
                        lastchangedureeSpecified,
                        lastEtat,
                        lastEtatSpecified,
                        correction,
                        correctionSpecified,
                        formatage,
                        precision,
                        precisionSpecified,
                        valuemax,
                        valuemaxSpecified,
                        valuemin,
                        valueminSpecified,
                        valuedef,
                        valuedefSpecified,
                        Commandes});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SaveDeviceAsync(
                    string IdSrv, 
                    string deviceId, 
                    string name, 
                    string address1, 
                    bool enable, 
                    bool enableSpecified, 
                    bool solo, 
                    bool soloSpecified, 
                    string driverid, 
                    string type, 
                    int refresh, 
                    bool refreshSpecified, 
                    string address2, 
                    string image, 
                    string modele, 
                    string description, 
                    int lastchangeduree, 
                    bool lastchangedureeSpecified, 
                    bool lastEtat, 
                    bool lastEtatSpecified, 
                    double correction, 
                    bool correctionSpecified, 
                    string formatage, 
                    double precision, 
                    bool precisionSpecified, 
                    double valuemax, 
                    bool valuemaxSpecified, 
                    double valuemin, 
                    bool valueminSpecified, 
                    double valuedef, 
                    bool valuedefSpecified, 
                    TelecommandeCommandes[] Commandes) {
            this.SaveDeviceAsync(IdSrv, deviceId, name, address1, enable, enableSpecified, solo, soloSpecified, driverid, type, refresh, refreshSpecified, address2, image, modele, description, lastchangeduree, lastchangedureeSpecified, lastEtat, lastEtatSpecified, correction, correctionSpecified, formatage, precision, precisionSpecified, valuemax, valuemaxSpecified, valuemin, valueminSpecified, valuedef, valuedefSpecified, Commandes, null);
        }
        
        /// <remarks/>
        public void SaveDeviceAsync(
                    string IdSrv, 
                    string deviceId, 
                    string name, 
                    string address1, 
                    bool enable, 
                    bool enableSpecified, 
                    bool solo, 
                    bool soloSpecified, 
                    string driverid, 
                    string type, 
                    int refresh, 
                    bool refreshSpecified, 
                    string address2, 
                    string image, 
                    string modele, 
                    string description, 
                    int lastchangeduree, 
                    bool lastchangedureeSpecified, 
                    bool lastEtat, 
                    bool lastEtatSpecified, 
                    double correction, 
                    bool correctionSpecified, 
                    string formatage, 
                    double precision, 
                    bool precisionSpecified, 
                    double valuemax, 
                    bool valuemaxSpecified, 
                    double valuemin, 
                    bool valueminSpecified, 
                    double valuedef, 
                    bool valuedefSpecified, 
                    TelecommandeCommandes[] Commandes, 
                    object userState) {
            if ((this.SaveDeviceOperationCompleted == null)) {
                this.SaveDeviceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveDeviceOperationCompleted);
            }
            this.InvokeAsync("SaveDevice", new object[] {
                        IdSrv,
                        deviceId,
                        name,
                        address1,
                        enable,
                        enableSpecified,
                        solo,
                        soloSpecified,
                        driverid,
                        type,
                        refresh,
                        refreshSpecified,
                        address2,
                        image,
                        modele,
                        description,
                        lastchangeduree,
                        lastchangedureeSpecified,
                        lastEtat,
                        lastEtatSpecified,
                        correction,
                        correctionSpecified,
                        formatage,
                        precision,
                        precisionSpecified,
                        valuemax,
                        valuemaxSpecified,
                        valuemin,
                        valueminSpecified,
                        valuedef,
                        valuedefSpecified,
                        Commandes}, this.SaveDeviceOperationCompleted, userState);
        }
        
        private void OnSaveDeviceOperationCompleted(object arg) {
            if ((this.SaveDeviceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveDeviceCompleted(this, new SaveDeviceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HoMIDom/IHoMIDom/SaveDeviceCommandIR", RequestNamespace="http://HoMIDom/", ResponseNamespace="http://HoMIDom/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string SaveDeviceCommandIR([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string IdSrv, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string deviceId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string CmdName, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string CmdData, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string CmdRepeat) {
            object[] results = this.Invoke("SaveDeviceCommandIR", new object[] {
                        IdSrv,
                        deviceId,
                        CmdName,
                        CmdData,
                        CmdRepeat});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SaveDeviceCommandIRAsync(string IdSrv, string deviceId, string CmdName, string CmdData, string CmdRepeat) {
            this.SaveDeviceCommandIRAsync(IdSrv, deviceId, CmdName, CmdData, CmdRepeat, null);
        }
        
        /// <remarks/>
        public void SaveDeviceCommandIRAsync(string IdSrv, string deviceId, string CmdName, string CmdData, string CmdRepeat, object userState) {
            if ((this.SaveDeviceCommandIROperationCompleted == null)) {
                this.SaveDeviceCommandIROperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveDeviceCommandIROperationCompleted);
            }
            this.InvokeAsync("SaveDeviceCommandIR", new object[] {
                        IdSrv,
                        deviceId,
                        CmdName,
                        CmdData,
                        CmdRepeat}, this.SaveDeviceCommandIROperationCompleted, userState);
        }
        
        private void OnSaveDeviceCommandIROperationCompleted(object arg) {
            if ((this.SaveDeviceCommandIRCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveDeviceCommandIRCompleted(this, new SaveDeviceCommandIRCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HoMIDom/IHoMIDom/StartIrLearning", RequestNamespace="http://HoMIDom/", ResponseNamespace="http://HoMIDom/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string StartIrLearning([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string IdSrv) {
            object[] results = this.Invoke("StartIrLearning", new object[] {
                        IdSrv});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void StartIrLearningAsync(string IdSrv) {
            this.StartIrLearningAsync(IdSrv, null);
        }
        
        /// <remarks/>
        public void StartIrLearningAsync(string IdSrv, object userState) {
            if ((this.StartIrLearningOperationCompleted == null)) {
                this.StartIrLearningOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStartIrLearningOperationCompleted);
            }
            this.InvokeAsync("StartIrLearning", new object[] {
                        IdSrv}, this.StartIrLearningOperationCompleted, userState);
        }
        
        private void OnStartIrLearningOperationCompleted(object arg) {
            if ((this.StartIrLearningCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StartIrLearningCompleted(this, new StartIrLearningCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HoMIDom/IHoMIDom/VerifChamp", RequestNamespace="http://HoMIDom/", ResponseNamespace="http://HoMIDom/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string VerifChamp([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Idsrv, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string DriverId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Champ, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] object Value) {
            object[] results = this.Invoke("VerifChamp", new object[] {
                        Idsrv,
                        DriverId,
                        Champ,
                        Value});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VerifChampAsync(string Idsrv, string DriverId, string Champ, object Value) {
            this.VerifChampAsync(Idsrv, DriverId, Champ, Value, null);
        }
        
        /// <remarks/>
        public void VerifChampAsync(string Idsrv, string DriverId, string Champ, object Value, object userState) {
            if ((this.VerifChampOperationCompleted == null)) {
                this.VerifChampOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifChampOperationCompleted);
            }
            this.InvokeAsync("VerifChamp", new object[] {
                        Idsrv,
                        DriverId,
                        Champ,
                        Value}, this.VerifChampOperationCompleted, userState);
        }
        
        private void OnVerifChampOperationCompleted(object arg) {
            if ((this.VerifChampCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifChampCompleted(this, new VerifChampCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HoMIDom/IHoMIDom/GetAllDrivers", RequestNamespace="http://HoMIDom/", ResponseNamespace="http://HoMIDom/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/HoMIDom.HoMIDom")]
        public TemplateDriver[] GetAllDrivers([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string IdSrv) {
            object[] results = this.Invoke("GetAllDrivers", new object[] {
                        IdSrv});
            return ((TemplateDriver[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllDriversAsync(string IdSrv) {
            this.GetAllDriversAsync(IdSrv, null);
        }
        
        /// <remarks/>
        public void GetAllDriversAsync(string IdSrv, object userState) {
            if ((this.GetAllDriversOperationCompleted == null)) {
                this.GetAllDriversOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllDriversOperationCompleted);
            }
            this.InvokeAsync("GetAllDrivers", new object[] {
                        IdSrv}, this.GetAllDriversOperationCompleted, userState);
        }
        
        private void OnGetAllDriversOperationCompleted(object arg) {
            if ((this.GetAllDriversCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllDriversCompleted(this, new GetAllDriversCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HoMIDom/IHoMIDom/ExecuteDriverCommand", RequestNamespace="http://HoMIDom/", ResponseNamespace="http://HoMIDom/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ExecuteDriverCommand([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string IdSrv, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string DriverId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] DeviceAction Action) {
            this.Invoke("ExecuteDriverCommand", new object[] {
                        IdSrv,
                        DriverId,
                        Action});
        }
        
        /// <remarks/>
        public void ExecuteDriverCommandAsync(string IdSrv, string DriverId, DeviceAction Action) {
            this.ExecuteDriverCommandAsync(IdSrv, DriverId, Action, null);
        }
        
        /// <remarks/>
        public void ExecuteDriverCommandAsync(string IdSrv, string DriverId, DeviceAction Action, object userState) {
            if ((this.ExecuteDriverCommandOperationCompleted == null)) {
                this.ExecuteDriverCommandOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteDriverCommandOperationCompleted);
            }
            this.InvokeAsync("ExecuteDriverCommand", new object[] {
                        IdSrv,
                        DriverId,
                        Action}, this.ExecuteDriverCommandOperationCompleted, userState);
        }
        
        private void OnExecuteDriverCommandOperationCompleted(object arg) {
            if ((this.ExecuteDriverCommandCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteDriverCommandCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HoMIDom/IHoMIDom/ReturnDriverByID", RequestNamespace="http://HoMIDom/", ResponseNamespace="http://HoMIDom/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public TemplateDriver ReturnDriverByID([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string IdSrv, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Id) {
            object[] results = this.Invoke("ReturnDriverByID", new object[] {
                        IdSrv,
                        Id});
            return ((TemplateDriver)(results[0]));
        }
        
        /// <remarks/>
        public void ReturnDriverByIDAsync(string IdSrv, string Id) {
            this.ReturnDriverByIDAsync(IdSrv, Id, null);
        }
        
        /// <remarks/>
        public void ReturnDriverByIDAsync(string IdSrv, string Id, object userState) {
            if ((this.ReturnDriverByIDOperationCompleted == null)) {
                this.ReturnDriverByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReturnDriverByIDOperationCompleted);
            }
            this.InvokeAsync("ReturnDriverByID", new object[] {
                        IdSrv,
                        Id}, this.ReturnDriverByIDOperationCompleted, userState);
        }
        
        private void OnReturnDriverByIDOperationCompleted(object arg) {
            if ((this.ReturnDriverByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReturnDriverByIDCompleted(this, new ReturnDriverByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HoMIDom/IHoMIDom/DeleteDriver", RequestNamespace="http://HoMIDom/", ResponseNamespace="http://HoMIDom/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteDriver([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string IdSrv, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string driverId, out int DeleteDriverResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool DeleteDriverResultSpecified) {
            object[] results = this.Invoke("DeleteDriver", new object[] {
                        IdSrv,
                        driverId});
            DeleteDriverResult = ((int)(results[0]));
            DeleteDriverResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void DeleteDriverAsync(string IdSrv, string driverId) {
            this.DeleteDriverAsync(IdSrv, driverId, null);
        }
        
        /// <remarks/>
        public void DeleteDriverAsync(string IdSrv, string driverId, object userState) {
            if ((this.DeleteDriverOperationCompleted == null)) {
                this.DeleteDriverOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteDriverOperationCompleted);
            }
            this.InvokeAsync("DeleteDriver", new object[] {
                        IdSrv,
                        driverId}, this.DeleteDriverOperationCompleted, userState);
        }
        
        private void OnDeleteDriverOperationCompleted(object arg) {
            if ((this.DeleteDriverCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteDriverCompleted(this, new DeleteDriverCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HoMIDom/IHoMIDom/ReturnDriverByNom", RequestNamespace="http://HoMIDom/", ResponseNamespace="http://HoMIDom/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public object ReturnDriverByNom([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string IdSrv, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string name) {
            object[] results = this.Invoke("ReturnDriverByNom", new object[] {
                        IdSrv,
                        name});
            return ((object)(results[0]));
        }
        
        /// <remarks/>
        public void ReturnDriverByNomAsync(string IdSrv, string name) {
            this.ReturnDriverByNomAsync(IdSrv, name, null);
        }
        
        /// <remarks/>
        public void ReturnDriverByNomAsync(string IdSrv, string name, object userState) {
            if ((this.ReturnDriverByNomOperationCompleted == null)) {
                this.ReturnDriverByNomOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReturnDriverByNomOperationCompleted);
            }
            this.InvokeAsync("ReturnDriverByNom", new object[] {
                        IdSrv,
                        name}, this.ReturnDriverByNomOperationCompleted, userState);
        }
        
        private void OnReturnDriverByNomOperationCompleted(object arg) {
            if ((this.ReturnDriverByNomCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReturnDriverByNomCompleted(this, new ReturnDriverByNomCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HoMIDom/IHoMIDom/SaveDriver", RequestNamespace="http://HoMIDom/", ResponseNamespace="http://HoMIDom/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string SaveDriver(
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string IdSrv, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string driverId, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string name, 
                    bool enable, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool enableSpecified, 
                    bool startauto, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool startautoSpecified, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string iptcp, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string porttcp, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string ipudp, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string portudp, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string com, 
                    int refresh, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool refreshSpecified, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string picture, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string modele, 
                    [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")] object[] Parametres) {
            object[] results = this.Invoke("SaveDriver", new object[] {
                        IdSrv,
                        driverId,
                        name,
                        enable,
                        enableSpecified,
                        startauto,
                        startautoSpecified,
                        iptcp,
                        porttcp,
                        ipudp,
                        portudp,
                        com,
                        refresh,
                        refreshSpecified,
                        picture,
                        modele,
                        Parametres});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SaveDriverAsync(
                    string IdSrv, 
                    string driverId, 
                    string name, 
                    bool enable, 
                    bool enableSpecified, 
                    bool startauto, 
                    bool startautoSpecified, 
                    string iptcp, 
                    string porttcp, 
                    string ipudp, 
                    string portudp, 
                    string com, 
                    int refresh, 
                    bool refreshSpecified, 
                    string picture, 
                    string modele, 
                    object[] Parametres) {
            this.SaveDriverAsync(IdSrv, driverId, name, enable, enableSpecified, startauto, startautoSpecified, iptcp, porttcp, ipudp, portudp, com, refresh, refreshSpecified, picture, modele, Parametres, null);
        }
        
        /// <remarks/>
        public void SaveDriverAsync(
                    string IdSrv, 
                    string driverId, 
                    string name, 
                    bool enable, 
                    bool enableSpecified, 
                    bool startauto, 
                    bool startautoSpecified, 
                    string iptcp, 
                    string porttcp, 
                    string ipudp, 
                    string portudp, 
                    string com, 
                    int refresh, 
                    bool refreshSpecified, 
                    string picture, 
                    string modele, 
                    object[] Parametres, 
                    object userState) {
            if ((this.SaveDriverOperationCompleted == null)) {
                this.SaveDriverOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveDriverOperationCompleted);
            }
            this.InvokeAsync("SaveDriver", new object[] {
                        IdSrv,
                        driverId,
                        name,
                        enable,
                        enableSpecified,
                        startauto,
                        startautoSpecified,
                        iptcp,
                        porttcp,
                        ipudp,
                        portudp,
                        com,
                        refresh,
                        refreshSpecified,
                        picture,
                        modele,
                        Parametres}, this.SaveDriverOperationCompleted, userState);
        }
        
        private void OnSaveDriverOperationCompleted(object arg) {
            if ((this.SaveDriverCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveDriverCompleted(this, new SaveDriverCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HoMIDom/IHoMIDom/StopDriver", RequestNamespace="http://HoMIDom/", ResponseNamespace="http://HoMIDom/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void StopDriver([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string IdSrv, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string DriverId) {
            this.Invoke("StopDriver", new object[] {
                        IdSrv,
                        DriverId});
        }
        
        /// <remarks/>
        public void StopDriverAsync(string IdSrv, string DriverId) {
            this.StopDriverAsync(IdSrv, DriverId, null);
        }
        
        /// <remarks/>
        public void StopDriverAsync(string IdSrv, string DriverId, object userState) {
            if ((this.StopDriverOperationCompleted == null)) {
                this.StopDriverOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStopDriverOperationCompleted);
            }
            this.InvokeAsync("StopDriver", new object[] {
                        IdSrv,
                        DriverId}, this.StopDriverOperationCompleted, userState);
        }
        
        private void OnStopDriverOperationCompleted(object arg) {
            if ((this.StopDriverCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StopDriverCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HoMIDom/IHoMIDom/StartDriver", RequestNamespace="http://HoMIDom/", ResponseNamespace="http://HoMIDom/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void StartDriver([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string IdSrv, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string DriverId) {
            this.Invoke("StartDriver", new object[] {
                        IdSrv,
                        DriverId});
        }
        
        /// <remarks/>
        public void StartDriverAsync(string IdSrv, string DriverId) {
            this.StartDriverAsync(IdSrv, DriverId, null);
        }
        
        /// <remarks/>
        public void StartDriverAsync(string IdSrv, string DriverId, object userState) {
            if ((this.StartDriverOperationCompleted == null)) {
                this.StartDriverOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStartDriverOperationCompleted);
            }
            this.InvokeAsync("StartDriver", new object[] {
                        IdSrv,
                        DriverId}, this.StartDriverOperationCompleted, userState);
        }
        
        private void OnStartDriverOperationCompleted(object arg) {
            if ((this.StartDriverCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StartDriverCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HoMIDom/IHoMIDom/ZoneIsEmpty", RequestNamespace="http://HoMIDom/", ResponseNamespace="http://HoMIDom/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ZoneIsEmpty([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string IdSrv, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string zoneId, out bool ZoneIsEmptyResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool ZoneIsEmptyResultSpecified) {
            object[] results = this.Invoke("ZoneIsEmpty", new object[] {
                        IdSrv,
                        zoneId});
            ZoneIsEmptyResult = ((bool)(results[0]));
            ZoneIsEmptyResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void ZoneIsEmptyAsync(string IdSrv, string zoneId) {
            this.ZoneIsEmptyAsync(IdSrv, zoneId, null);
        }
        
        /// <remarks/>
        public void ZoneIsEmptyAsync(string IdSrv, string zoneId, object userState) {
            if ((this.ZoneIsEmptyOperationCompleted == null)) {
                this.ZoneIsEmptyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnZoneIsEmptyOperationCompleted);
            }
            this.InvokeAsync("ZoneIsEmpty", new object[] {
                        IdSrv,
                        zoneId}, this.ZoneIsEmptyOperationCompleted, userState);
        }
        
        private void OnZoneIsEmptyOperationCompleted(object arg) {
            if ((this.ZoneIsEmptyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ZoneIsEmptyCompleted(this, new ZoneIsEmptyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HoMIDom/IHoMIDom/DeleteZone", RequestNamespace="http://HoMIDom/", ResponseNamespace="http://HoMIDom/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteZone([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string IdSrv, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string zoneId, out int DeleteZoneResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool DeleteZoneResultSpecified) {
            object[] results = this.Invoke("DeleteZone", new object[] {
                        IdSrv,
                        zoneId});
            DeleteZoneResult = ((int)(results[0]));
            DeleteZoneResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void DeleteZoneAsync(string IdSrv, string zoneId) {
            this.DeleteZoneAsync(IdSrv, zoneId, null);
        }
        
        /// <remarks/>
        public void DeleteZoneAsync(string IdSrv, string zoneId, object userState) {
            if ((this.DeleteZoneOperationCompleted == null)) {
                this.DeleteZoneOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteZoneOperationCompleted);
            }
            this.InvokeAsync("DeleteZone", new object[] {
                        IdSrv,
                        zoneId}, this.DeleteZoneOperationCompleted, userState);
        }
        
        private void OnDeleteZoneOperationCompleted(object arg) {
            if ((this.DeleteZoneCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteZoneCompleted(this, new DeleteZoneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HoMIDom/IHoMIDom/GetAllZones", RequestNamespace="http://HoMIDom/", ResponseNamespace="http://HoMIDom/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/HoMIDom.HoMIDom")]
        public Zone[] GetAllZones([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string IdSrv) {
            object[] results = this.Invoke("GetAllZones", new object[] {
                        IdSrv});
            return ((Zone[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllZonesAsync(string IdSrv) {
            this.GetAllZonesAsync(IdSrv, null);
        }
        
        /// <remarks/>
        public void GetAllZonesAsync(string IdSrv, object userState) {
            if ((this.GetAllZonesOperationCompleted == null)) {
                this.GetAllZonesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllZonesOperationCompleted);
            }
            this.InvokeAsync("GetAllZones", new object[] {
                        IdSrv}, this.GetAllZonesOperationCompleted, userState);
        }
        
        private void OnGetAllZonesOperationCompleted(object arg) {
            if ((this.GetAllZonesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllZonesCompleted(this, new GetAllZonesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HoMIDom/IHoMIDom/GetDeviceInZone", RequestNamespace="http://HoMIDom/", ResponseNamespace="http://HoMIDom/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/HoMIDom.HoMIDom")]
        public TemplateDevice[] GetDeviceInZone([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string IdSrv, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string zoneId) {
            object[] results = this.Invoke("GetDeviceInZone", new object[] {
                        IdSrv,
                        zoneId});
            return ((TemplateDevice[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDeviceInZoneAsync(string IdSrv, string zoneId) {
            this.GetDeviceInZoneAsync(IdSrv, zoneId, null);
        }
        
        /// <remarks/>
        public void GetDeviceInZoneAsync(string IdSrv, string zoneId, object userState) {
            if ((this.GetDeviceInZoneOperationCompleted == null)) {
                this.GetDeviceInZoneOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDeviceInZoneOperationCompleted);
            }
            this.InvokeAsync("GetDeviceInZone", new object[] {
                        IdSrv,
                        zoneId}, this.GetDeviceInZoneOperationCompleted, userState);
        }
        
        private void OnGetDeviceInZoneOperationCompleted(object arg) {
            if ((this.GetDeviceInZoneCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDeviceInZoneCompleted(this, new GetDeviceInZoneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HoMIDom/IHoMIDom/ReturnZoneByID", RequestNamespace="http://HoMIDom/", ResponseNamespace="http://HoMIDom/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Zone ReturnZoneByID([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string IdSrv, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Id) {
            object[] results = this.Invoke("ReturnZoneByID", new object[] {
                        IdSrv,
                        Id});
            return ((Zone)(results[0]));
        }
        
        /// <remarks/>
        public void ReturnZoneByIDAsync(string IdSrv, string Id) {
            this.ReturnZoneByIDAsync(IdSrv, Id, null);
        }
        
        /// <remarks/>
        public void ReturnZoneByIDAsync(string IdSrv, string Id, object userState) {
            if ((this.ReturnZoneByIDOperationCompleted == null)) {
                this.ReturnZoneByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReturnZoneByIDOperationCompleted);
            }
            this.InvokeAsync("ReturnZoneByID", new object[] {
                        IdSrv,
                        Id}, this.ReturnZoneByIDOperationCompleted, userState);
        }
        
        private void OnReturnZoneByIDOperationCompleted(object arg) {
            if ((this.ReturnZoneByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReturnZoneByIDCompleted(this, new ReturnZoneByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HoMIDom/IHoMIDom/SaveZone", RequestNamespace="http://HoMIDom/", ResponseNamespace="http://HoMIDom/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string SaveZone([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string IdSrv, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string zoneId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string name, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/HoMIDom.HoMIDom")] ZoneElement_Zone[] ListElement, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string icon, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string image) {
            object[] results = this.Invoke("SaveZone", new object[] {
                        IdSrv,
                        zoneId,
                        name,
                        ListElement,
                        icon,
                        image});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SaveZoneAsync(string IdSrv, string zoneId, string name, ZoneElement_Zone[] ListElement, string icon, string image) {
            this.SaveZoneAsync(IdSrv, zoneId, name, ListElement, icon, image, null);
        }
        
        /// <remarks/>
        public void SaveZoneAsync(string IdSrv, string zoneId, string name, ZoneElement_Zone[] ListElement, string icon, string image, object userState) {
            if ((this.SaveZoneOperationCompleted == null)) {
                this.SaveZoneOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveZoneOperationCompleted);
            }
            this.InvokeAsync("SaveZone", new object[] {
                        IdSrv,
                        zoneId,
                        name,
                        ListElement,
                        icon,
                        image}, this.SaveZoneOperationCompleted, userState);
        }
        
        private void OnSaveZoneOperationCompleted(object arg) {
            if ((this.SaveZoneCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveZoneCompleted(this, new SaveZoneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HoMIDom/IHoMIDom/AddDeviceToZone", RequestNamespace="http://HoMIDom/", ResponseNamespace="http://HoMIDom/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string AddDeviceToZone([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string IdSrv, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string ZoneId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string DeviceId, bool Visible, [System.Xml.Serialization.XmlIgnoreAttribute()] bool VisibleSpecified) {
            object[] results = this.Invoke("AddDeviceToZone", new object[] {
                        IdSrv,
                        ZoneId,
                        DeviceId,
                        Visible,
                        VisibleSpecified});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddDeviceToZoneAsync(string IdSrv, string ZoneId, string DeviceId, bool Visible, bool VisibleSpecified) {
            this.AddDeviceToZoneAsync(IdSrv, ZoneId, DeviceId, Visible, VisibleSpecified, null);
        }
        
        /// <remarks/>
        public void AddDeviceToZoneAsync(string IdSrv, string ZoneId, string DeviceId, bool Visible, bool VisibleSpecified, object userState) {
            if ((this.AddDeviceToZoneOperationCompleted == null)) {
                this.AddDeviceToZoneOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddDeviceToZoneOperationCompleted);
            }
            this.InvokeAsync("AddDeviceToZone", new object[] {
                        IdSrv,
                        ZoneId,
                        DeviceId,
                        Visible,
                        VisibleSpecified}, this.AddDeviceToZoneOperationCompleted, userState);
        }
        
        private void OnAddDeviceToZoneOperationCompleted(object arg) {
            if ((this.AddDeviceToZoneCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddDeviceToZoneCompleted(this, new AddDeviceToZoneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HoMIDom/IHoMIDom/DeleteDeviceToZone", RequestNamespace="http://HoMIDom/", ResponseNamespace="http://HoMIDom/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string DeleteDeviceToZone([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string IdSrv, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string ZoneId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string DeviceId) {
            object[] results = this.Invoke("DeleteDeviceToZone", new object[] {
                        IdSrv,
                        ZoneId,
                        DeviceId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteDeviceToZoneAsync(string IdSrv, string ZoneId, string DeviceId) {
            this.DeleteDeviceToZoneAsync(IdSrv, ZoneId, DeviceId, null);
        }
        
        /// <remarks/>
        public void DeleteDeviceToZoneAsync(string IdSrv, string ZoneId, string DeviceId, object userState) {
            if ((this.DeleteDeviceToZoneOperationCompleted == null)) {
                this.DeleteDeviceToZoneOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteDeviceToZoneOperationCompleted);
            }
            this.InvokeAsync("DeleteDeviceToZone", new object[] {
                        IdSrv,
                        ZoneId,
                        DeviceId}, this.DeleteDeviceToZoneOperationCompleted, userState);
        }
        
        private void OnDeleteDeviceToZoneOperationCompleted(object arg) {
            if ((this.DeleteDeviceToZoneCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteDeviceToZoneCompleted(this, new DeleteDeviceToZoneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HoMIDom/IHoMIDom/DeleteMacro", RequestNamespace="http://HoMIDom/", ResponseNamespace="http://HoMIDom/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteMacro([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string IdSrv, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string macroId, out int DeleteMacroResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool DeleteMacroResultSpecified) {
            object[] results = this.Invoke("DeleteMacro", new object[] {
                        IdSrv,
                        macroId});
            DeleteMacroResult = ((int)(results[0]));
            DeleteMacroResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void DeleteMacroAsync(string IdSrv, string macroId) {
            this.DeleteMacroAsync(IdSrv, macroId, null);
        }
        
        /// <remarks/>
        public void DeleteMacroAsync(string IdSrv, string macroId, object userState) {
            if ((this.DeleteMacroOperationCompleted == null)) {
                this.DeleteMacroOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteMacroOperationCompleted);
            }
            this.InvokeAsync("DeleteMacro", new object[] {
                        IdSrv,
                        macroId}, this.DeleteMacroOperationCompleted, userState);
        }
        
        private void OnDeleteMacroOperationCompleted(object arg) {
            if ((this.DeleteMacroCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteMacroCompleted(this, new DeleteMacroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HoMIDom/IHoMIDom/RunMacro", RequestNamespace="http://HoMIDom/", ResponseNamespace="http://HoMIDom/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RunMacro([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string IdSrv, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Id) {
            this.Invoke("RunMacro", new object[] {
                        IdSrv,
                        Id});
        }
        
        /// <remarks/>
        public void RunMacroAsync(string IdSrv, string Id) {
            this.RunMacroAsync(IdSrv, Id, null);
        }
        
        /// <remarks/>
        public void RunMacroAsync(string IdSrv, string Id, object userState) {
            if ((this.RunMacroOperationCompleted == null)) {
                this.RunMacroOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRunMacroOperationCompleted);
            }
            this.InvokeAsync("RunMacro", new object[] {
                        IdSrv,
                        Id}, this.RunMacroOperationCompleted, userState);
        }
        
        private void OnRunMacroOperationCompleted(object arg) {
            if ((this.RunMacroCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RunMacroCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HoMIDom/IHoMIDom/GetAllMacros", RequestNamespace="http://HoMIDom/", ResponseNamespace="http://HoMIDom/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/HoMIDom.HoMIDom")]
        public Macro[] GetAllMacros([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string IdSrv) {
            object[] results = this.Invoke("GetAllMacros", new object[] {
                        IdSrv});
            return ((Macro[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllMacrosAsync(string IdSrv) {
            this.GetAllMacrosAsync(IdSrv, null);
        }
        
        /// <remarks/>
        public void GetAllMacrosAsync(string IdSrv, object userState) {
            if ((this.GetAllMacrosOperationCompleted == null)) {
                this.GetAllMacrosOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllMacrosOperationCompleted);
            }
            this.InvokeAsync("GetAllMacros", new object[] {
                        IdSrv}, this.GetAllMacrosOperationCompleted, userState);
        }
        
        private void OnGetAllMacrosOperationCompleted(object arg) {
            if ((this.GetAllMacrosCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllMacrosCompleted(this, new GetAllMacrosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HoMIDom/IHoMIDom/ReturnMacroById", RequestNamespace="http://HoMIDom/", ResponseNamespace="http://HoMIDom/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Macro ReturnMacroById([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string IdSrv, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string MacroId) {
            object[] results = this.Invoke("ReturnMacroById", new object[] {
                        IdSrv,
                        MacroId});
            return ((Macro)(results[0]));
        }
        
        /// <remarks/>
        public void ReturnMacroByIdAsync(string IdSrv, string MacroId) {
            this.ReturnMacroByIdAsync(IdSrv, MacroId, null);
        }
        
        /// <remarks/>
        public void ReturnMacroByIdAsync(string IdSrv, string MacroId, object userState) {
            if ((this.ReturnMacroByIdOperationCompleted == null)) {
                this.ReturnMacroByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReturnMacroByIdOperationCompleted);
            }
            this.InvokeAsync("ReturnMacroById", new object[] {
                        IdSrv,
                        MacroId}, this.ReturnMacroByIdOperationCompleted, userState);
        }
        
        private void OnReturnMacroByIdOperationCompleted(object arg) {
            if ((this.ReturnMacroByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReturnMacroByIdCompleted(this, new ReturnMacroByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HoMIDom/IHoMIDom/SaveMacro", RequestNamespace="http://HoMIDom/", ResponseNamespace="http://HoMIDom/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string SaveMacro([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string IdSrv, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string macroId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string nom, bool enable, [System.Xml.Serialization.XmlIgnoreAttribute()] bool enableSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string description, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")] object[] listactions) {
            object[] results = this.Invoke("SaveMacro", new object[] {
                        IdSrv,
                        macroId,
                        nom,
                        enable,
                        enableSpecified,
                        description,
                        listactions});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SaveMacroAsync(string IdSrv, string macroId, string nom, bool enable, bool enableSpecified, string description, object[] listactions) {
            this.SaveMacroAsync(IdSrv, macroId, nom, enable, enableSpecified, description, listactions, null);
        }
        
        /// <remarks/>
        public void SaveMacroAsync(string IdSrv, string macroId, string nom, bool enable, bool enableSpecified, string description, object[] listactions, object userState) {
            if ((this.SaveMacroOperationCompleted == null)) {
                this.SaveMacroOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveMacroOperationCompleted);
            }
            this.InvokeAsync("SaveMacro", new object[] {
                        IdSrv,
                        macroId,
                        nom,
                        enable,
                        enableSpecified,
                        description,
                        listactions}, this.SaveMacroOperationCompleted, userState);
        }
        
        private void OnSaveMacroOperationCompleted(object arg) {
            if ((this.SaveMacroCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveMacroCompleted(this, new SaveMacroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HoMIDom/IHoMIDom/GetAllTriggers", RequestNamespace="http://HoMIDom/", ResponseNamespace="http://HoMIDom/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/HoMIDom.HoMIDom")]
        public Trigger[] GetAllTriggers([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string IdSrv) {
            object[] results = this.Invoke("GetAllTriggers", new object[] {
                        IdSrv});
            return ((Trigger[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllTriggersAsync(string IdSrv) {
            this.GetAllTriggersAsync(IdSrv, null);
        }
        
        /// <remarks/>
        public void GetAllTriggersAsync(string IdSrv, object userState) {
            if ((this.GetAllTriggersOperationCompleted == null)) {
                this.GetAllTriggersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllTriggersOperationCompleted);
            }
            this.InvokeAsync("GetAllTriggers", new object[] {
                        IdSrv}, this.GetAllTriggersOperationCompleted, userState);
        }
        
        private void OnGetAllTriggersOperationCompleted(object arg) {
            if ((this.GetAllTriggersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllTriggersCompleted(this, new GetAllTriggersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HoMIDom/IHoMIDom/UploadFile", RequestNamespace="http://HoMIDom/", ResponseNamespace="http://HoMIDom/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string UploadFile([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string IdSrv, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", IsNullable=true)] byte[] byteData, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Namefile) {
            object[] results = this.Invoke("UploadFile", new object[] {
                        IdSrv,
                        byteData,
                        Namefile});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UploadFileAsync(string IdSrv, byte[] byteData, string Namefile) {
            this.UploadFileAsync(IdSrv, byteData, Namefile, null);
        }
        
        /// <remarks/>
        public void UploadFileAsync(string IdSrv, byte[] byteData, string Namefile, object userState) {
            if ((this.UploadFileOperationCompleted == null)) {
                this.UploadFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadFileOperationCompleted);
            }
            this.InvokeAsync("UploadFile", new object[] {
                        IdSrv,
                        byteData,
                        Namefile}, this.UploadFileOperationCompleted, userState);
        }
        
        private void OnUploadFileOperationCompleted(object arg) {
            if ((this.UploadFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadFileCompleted(this, new UploadFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HoMIDom/IHoMIDom/GetAllVoice", RequestNamespace="http://HoMIDom/", ResponseNamespace="http://HoMIDom/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public string[] GetAllVoice() {
            object[] results = this.Invoke("GetAllVoice", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllVoiceAsync() {
            this.GetAllVoiceAsync(null);
        }
        
        /// <remarks/>
        public void GetAllVoiceAsync(object userState) {
            if ((this.GetAllVoiceOperationCompleted == null)) {
                this.GetAllVoiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllVoiceOperationCompleted);
            }
            this.InvokeAsync("GetAllVoice", new object[0], this.GetAllVoiceOperationCompleted, userState);
        }
        
        private void OnGetAllVoiceOperationCompleted(object arg) {
            if ((this.GetAllVoiceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllVoiceCompleted(this, new GetAllVoiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HoMIDom/IHoMIDom/GetDefautVoice", RequestNamespace="http://HoMIDom/", ResponseNamespace="http://HoMIDom/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string GetDefautVoice() {
            object[] results = this.Invoke("GetDefautVoice", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDefautVoiceAsync() {
            this.GetDefautVoiceAsync(null);
        }
        
        /// <remarks/>
        public void GetDefautVoiceAsync(object userState) {
            if ((this.GetDefautVoiceOperationCompleted == null)) {
                this.GetDefautVoiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDefautVoiceOperationCompleted);
            }
            this.InvokeAsync("GetDefautVoice", new object[0], this.GetDefautVoiceOperationCompleted, userState);
        }
        
        private void OnGetDefautVoiceOperationCompleted(object arg) {
            if ((this.GetDefautVoiceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDefautVoiceCompleted(this, new GetDefautVoiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HoMIDom/IHoMIDom/SetDefautVoice", RequestNamespace="http://HoMIDom/", ResponseNamespace="http://HoMIDom/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetDefautVoice([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Voice) {
            this.Invoke("SetDefautVoice", new object[] {
                        Voice});
        }
        
        /// <remarks/>
        public void SetDefautVoiceAsync(string Voice) {
            this.SetDefautVoiceAsync(Voice, null);
        }
        
        /// <remarks/>
        public void SetDefautVoiceAsync(string Voice, object userState) {
            if ((this.SetDefautVoiceOperationCompleted == null)) {
                this.SetDefautVoiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetDefautVoiceOperationCompleted);
            }
            this.InvokeAsync("SetDefautVoice", new object[] {
                        Voice}, this.SetDefautVoiceOperationCompleted, userState);
        }
        
        private void OnSetDefautVoiceOperationCompleted(object arg) {
            if ((this.SetDefautVoiceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetDefautVoiceCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HoMIDom/IHoMIDom/CanDelete", RequestNamespace="http://HoMIDom/", ResponseNamespace="http://HoMIDom/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public string[] CanDelete([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string IdSrv, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Id) {
            object[] results = this.Invoke("CanDelete", new object[] {
                        IdSrv,
                        Id});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void CanDeleteAsync(string IdSrv, string Id) {
            this.CanDeleteAsync(IdSrv, Id, null);
        }
        
        /// <remarks/>
        public void CanDeleteAsync(string IdSrv, string Id, object userState) {
            if ((this.CanDeleteOperationCompleted == null)) {
                this.CanDeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCanDeleteOperationCompleted);
            }
            this.InvokeAsync("CanDelete", new object[] {
                        IdSrv,
                        Id}, this.CanDeleteOperationCompleted, userState);
        }
        
        private void OnCanDeleteOperationCompleted(object arg) {
            if ((this.CanDeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CanDeleteCompleted(this, new CanDeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HoMIDom/IHoMIDom/GetTimeSave", RequestNamespace="http://HoMIDom/", ResponseNamespace="http://HoMIDom/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetTimeSave([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string IdSrv, out int GetTimeSaveResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool GetTimeSaveResultSpecified) {
            object[] results = this.Invoke("GetTimeSave", new object[] {
                        IdSrv});
            GetTimeSaveResult = ((int)(results[0]));
            GetTimeSaveResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void GetTimeSaveAsync(string IdSrv) {
            this.GetTimeSaveAsync(IdSrv, null);
        }
        
        /// <remarks/>
        public void GetTimeSaveAsync(string IdSrv, object userState) {
            if ((this.GetTimeSaveOperationCompleted == null)) {
                this.GetTimeSaveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTimeSaveOperationCompleted);
            }
            this.InvokeAsync("GetTimeSave", new object[] {
                        IdSrv}, this.GetTimeSaveOperationCompleted, userState);
        }
        
        private void OnGetTimeSaveOperationCompleted(object arg) {
            if ((this.GetTimeSaveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTimeSaveCompleted(this, new GetTimeSaveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HoMIDom/IHoMIDom/SetTimeSave", RequestNamespace="http://HoMIDom/", ResponseNamespace="http://HoMIDom/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string SetTimeSave([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string IdSrv, int Value, [System.Xml.Serialization.XmlIgnoreAttribute()] bool ValueSpecified) {
            object[] results = this.Invoke("SetTimeSave", new object[] {
                        IdSrv,
                        Value,
                        ValueSpecified});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SetTimeSaveAsync(string IdSrv, int Value, bool ValueSpecified) {
            this.SetTimeSaveAsync(IdSrv, Value, ValueSpecified, null);
        }
        
        /// <remarks/>
        public void SetTimeSaveAsync(string IdSrv, int Value, bool ValueSpecified, object userState) {
            if ((this.SetTimeSaveOperationCompleted == null)) {
                this.SetTimeSaveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetTimeSaveOperationCompleted);
            }
            this.InvokeAsync("SetTimeSave", new object[] {
                        IdSrv,
                        Value,
                        ValueSpecified}, this.SetTimeSaveOperationCompleted, userState);
        }
        
        private void OnSetTimeSaveOperationCompleted(object arg) {
            if ((this.SetTimeSaveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetTimeSaveCompleted(this, new SetTimeSaveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HoMIDom/IHoMIDom/GetIdServer", RequestNamespace="http://HoMIDom/", ResponseNamespace="http://HoMIDom/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string GetIdServer([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string IdSrv) {
            object[] results = this.Invoke("GetIdServer", new object[] {
                        IdSrv});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetIdServerAsync(string IdSrv) {
            this.GetIdServerAsync(IdSrv, null);
        }
        
        /// <remarks/>
        public void GetIdServerAsync(string IdSrv, object userState) {
            if ((this.GetIdServerOperationCompleted == null)) {
                this.GetIdServerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetIdServerOperationCompleted);
            }
            this.InvokeAsync("GetIdServer", new object[] {
                        IdSrv}, this.GetIdServerOperationCompleted, userState);
        }
        
        private void OnGetIdServerOperationCompleted(object arg) {
            if ((this.GetIdServerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetIdServerCompleted(this, new GetIdServerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HoMIDom/IHoMIDom/SetIdServer", RequestNamespace="http://HoMIDom/", ResponseNamespace="http://HoMIDom/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string SetIdServer([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string IdSrv, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Value) {
            object[] results = this.Invoke("SetIdServer", new object[] {
                        IdSrv,
                        Value});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SetIdServerAsync(string IdSrv, string Value) {
            this.SetIdServerAsync(IdSrv, Value, null);
        }
        
        /// <remarks/>
        public void SetIdServerAsync(string IdSrv, string Value, object userState) {
            if ((this.SetIdServerOperationCompleted == null)) {
                this.SetIdServerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetIdServerOperationCompleted);
            }
            this.InvokeAsync("SetIdServer", new object[] {
                        IdSrv,
                        Value}, this.SetIdServerOperationCompleted, userState);
        }
        
        private void OnSetIdServerOperationCompleted(object arg) {
            if ((this.SetIdServerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetIdServerCompleted(this, new SetIdServerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HoMIDom/IHoMIDom/GetServerVersion", RequestNamespace="http://HoMIDom/", ResponseNamespace="http://HoMIDom/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string GetServerVersion() {
            object[] results = this.Invoke("GetServerVersion", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetServerVersionAsync() {
            this.GetServerVersionAsync(null);
        }
        
        /// <remarks/>
        public void GetServerVersionAsync(object userState) {
            if ((this.GetServerVersionOperationCompleted == null)) {
                this.GetServerVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetServerVersionOperationCompleted);
            }
            this.InvokeAsync("GetServerVersion", new object[0], this.GetServerVersionOperationCompleted, userState);
        }
        
        private void OnGetServerVersionOperationCompleted(object arg) {
            if ((this.GetServerVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetServerVersionCompleted(this, new GetServerVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HoMIDom/IHoMIDom/GetTime", RequestNamespace="http://HoMIDom/", ResponseNamespace="http://HoMIDom/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string GetTime() {
            object[] results = this.Invoke("GetTime", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetTimeAsync() {
            this.GetTimeAsync(null);
        }
        
        /// <remarks/>
        public void GetTimeAsync(object userState) {
            if ((this.GetTimeOperationCompleted == null)) {
                this.GetTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTimeOperationCompleted);
            }
            this.InvokeAsync("GetTime", new object[0], this.GetTimeOperationCompleted, userState);
        }
        
        private void OnGetTimeOperationCompleted(object arg) {
            if ((this.GetTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTimeCompleted(this, new GetTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HoMIDom/IHoMIDom/MessageToServer", RequestNamespace="http://HoMIDom/", ResponseNamespace="http://HoMIDom/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void MessageToServer([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Message) {
            this.Invoke("MessageToServer", new object[] {
                        Message});
        }
        
        /// <remarks/>
        public void MessageToServerAsync(string Message) {
            this.MessageToServerAsync(Message, null);
        }
        
        /// <remarks/>
        public void MessageToServerAsync(string Message, object userState) {
            if ((this.MessageToServerOperationCompleted == null)) {
                this.MessageToServerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMessageToServerOperationCompleted);
            }
            this.InvokeAsync("MessageToServer", new object[] {
                        Message}, this.MessageToServerOperationCompleted, userState);
        }
        
        private void OnMessageToServerOperationCompleted(object arg) {
            if ((this.MessageToServerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MessageToServerCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HoMIDom/IHoMIDom/SaveConfig", RequestNamespace="http://HoMIDom/", ResponseNamespace="http://HoMIDom/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string SaveConfig([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string IdSrv) {
            object[] results = this.Invoke("SaveConfig", new object[] {
                        IdSrv});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SaveConfigAsync(string IdSrv) {
            this.SaveConfigAsync(IdSrv, null);
        }
        
        /// <remarks/>
        public void SaveConfigAsync(string IdSrv, object userState) {
            if ((this.SaveConfigOperationCompleted == null)) {
                this.SaveConfigOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveConfigOperationCompleted);
            }
            this.InvokeAsync("SaveConfig", new object[] {
                        IdSrv}, this.SaveConfigOperationCompleted, userState);
        }
        
        private void OnSaveConfigOperationCompleted(object arg) {
            if ((this.SaveConfigCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveConfigCompleted(this, new SaveConfigCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HoMIDom/IHoMIDom/ExportConfig", RequestNamespace="http://HoMIDom/", ResponseNamespace="http://HoMIDom/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ExportConfig([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string IdSrv) {
            object[] results = this.Invoke("ExportConfig", new object[] {
                        IdSrv});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExportConfigAsync(string IdSrv) {
            this.ExportConfigAsync(IdSrv, null);
        }
        
        /// <remarks/>
        public void ExportConfigAsync(string IdSrv, object userState) {
            if ((this.ExportConfigOperationCompleted == null)) {
                this.ExportConfigOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExportConfigOperationCompleted);
            }
            this.InvokeAsync("ExportConfig", new object[] {
                        IdSrv}, this.ExportConfigOperationCompleted, userState);
        }
        
        private void OnExportConfigOperationCompleted(object arg) {
            if ((this.ExportConfigCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExportConfigCompleted(this, new ExportConfigCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HoMIDom/IHoMIDom/ImportConfig", RequestNamespace="http://HoMIDom/", ResponseNamespace="http://HoMIDom/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ImportConfig([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string IdSrv, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Source) {
            object[] results = this.Invoke("ImportConfig", new object[] {
                        IdSrv,
                        Source});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ImportConfigAsync(string IdSrv, string Source) {
            this.ImportConfigAsync(IdSrv, Source, null);
        }
        
        /// <remarks/>
        public void ImportConfigAsync(string IdSrv, string Source, object userState) {
            if ((this.ImportConfigOperationCompleted == null)) {
                this.ImportConfigOperationCompleted = new System.Threading.SendOrPostCallback(this.OnImportConfigOperationCompleted);
            }
            this.InvokeAsync("ImportConfig", new object[] {
                        IdSrv,
                        Source}, this.ImportConfigOperationCompleted, userState);
        }
        
        private void OnImportConfigOperationCompleted(object arg) {
            if ((this.ImportConfigCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ImportConfigCompleted(this, new ImportConfigCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HoMIDom/IHoMIDom/Start", RequestNamespace="http://HoMIDom/", ResponseNamespace="http://HoMIDom/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Start() {
            this.Invoke("Start", new object[0]);
        }
        
        /// <remarks/>
        public void StartAsync() {
            this.StartAsync(null);
        }
        
        /// <remarks/>
        public void StartAsync(object userState) {
            if ((this.StartOperationCompleted == null)) {
                this.StartOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStartOperationCompleted);
            }
            this.InvokeAsync("Start", new object[0], this.StartOperationCompleted, userState);
        }
        
        private void OnStartOperationCompleted(object arg) {
            if ((this.StartCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StartCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HoMIDom/IHoMIDom/Stop", RequestNamespace="http://HoMIDom/", ResponseNamespace="http://HoMIDom/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Stop([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string idSrv) {
            this.Invoke("Stop", new object[] {
                        idSrv});
        }
        
        /// <remarks/>
        public void StopAsync(string idSrv) {
            this.StopAsync(idSrv, null);
        }
        
        /// <remarks/>
        public void StopAsync(string idSrv, object userState) {
            if ((this.StopOperationCompleted == null)) {
                this.StopOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStopOperationCompleted);
            }
            this.InvokeAsync("Stop", new object[] {
                        idSrv}, this.StopOperationCompleted, userState);
        }
        
        private void OnStopOperationCompleted(object arg) {
            if ((this.StopCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StopCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HoMIDom/IHoMIDom/ReStart", RequestNamespace="http://HoMIDom/", ResponseNamespace="http://HoMIDom/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ReStart([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string IdSrv) {
            this.Invoke("ReStart", new object[] {
                        IdSrv});
        }
        
        /// <remarks/>
        public void ReStartAsync(string IdSrv) {
            this.ReStartAsync(IdSrv, null);
        }
        
        /// <remarks/>
        public void ReStartAsync(string IdSrv, object userState) {
            if ((this.ReStartOperationCompleted == null)) {
                this.ReStartOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReStartOperationCompleted);
            }
            this.InvokeAsync("ReStart", new object[] {
                        IdSrv}, this.ReStartOperationCompleted, userState);
        }
        
        private void OnReStartOperationCompleted(object arg) {
            if ((this.ReStartCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReStartCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HoMIDom/IHoMIDom/SetPortSOAP", RequestNamespace="http://HoMIDom/", ResponseNamespace="http://HoMIDom/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetPortSOAP([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string IdSrv, double Value, [System.Xml.Serialization.XmlIgnoreAttribute()] bool ValueSpecified) {
            this.Invoke("SetPortSOAP", new object[] {
                        IdSrv,
                        Value,
                        ValueSpecified});
        }
        
        /// <remarks/>
        public void SetPortSOAPAsync(string IdSrv, double Value, bool ValueSpecified) {
            this.SetPortSOAPAsync(IdSrv, Value, ValueSpecified, null);
        }
        
        /// <remarks/>
        public void SetPortSOAPAsync(string IdSrv, double Value, bool ValueSpecified, object userState) {
            if ((this.SetPortSOAPOperationCompleted == null)) {
                this.SetPortSOAPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetPortSOAPOperationCompleted);
            }
            this.InvokeAsync("SetPortSOAP", new object[] {
                        IdSrv,
                        Value,
                        ValueSpecified}, this.SetPortSOAPOperationCompleted, userState);
        }
        
        private void OnSetPortSOAPOperationCompleted(object arg) {
            if ((this.SetPortSOAPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetPortSOAPCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HoMIDom/IHoMIDom/GetPortSOAP", RequestNamespace="http://HoMIDom/", ResponseNamespace="http://HoMIDom/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetPortSOAP(out double GetPortSOAPResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool GetPortSOAPResultSpecified) {
            object[] results = this.Invoke("GetPortSOAP", new object[0]);
            GetPortSOAPResult = ((double)(results[0]));
            GetPortSOAPResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void GetPortSOAPAsync() {
            this.GetPortSOAPAsync(null);
        }
        
        /// <remarks/>
        public void GetPortSOAPAsync(object userState) {
            if ((this.GetPortSOAPOperationCompleted == null)) {
                this.GetPortSOAPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPortSOAPOperationCompleted);
            }
            this.InvokeAsync("GetPortSOAP", new object[0], this.GetPortSOAPOperationCompleted, userState);
        }
        
        private void OnGetPortSOAPOperationCompleted(object arg) {
            if ((this.GetPortSOAPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPortSOAPCompleted(this, new GetPortSOAPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HoMIDom/IHoMIDom/SetIPSOAP", RequestNamespace="http://HoMIDom/", ResponseNamespace="http://HoMIDom/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetIPSOAP([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string IdSrv, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Value) {
            this.Invoke("SetIPSOAP", new object[] {
                        IdSrv,
                        Value});
        }
        
        /// <remarks/>
        public void SetIPSOAPAsync(string IdSrv, string Value) {
            this.SetIPSOAPAsync(IdSrv, Value, null);
        }
        
        /// <remarks/>
        public void SetIPSOAPAsync(string IdSrv, string Value, object userState) {
            if ((this.SetIPSOAPOperationCompleted == null)) {
                this.SetIPSOAPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetIPSOAPOperationCompleted);
            }
            this.InvokeAsync("SetIPSOAP", new object[] {
                        IdSrv,
                        Value}, this.SetIPSOAPOperationCompleted, userState);
        }
        
        private void OnSetIPSOAPOperationCompleted(object arg) {
            if ((this.SetIPSOAPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetIPSOAPCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HoMIDom/IHoMIDom/GetIPSOAP", RequestNamespace="http://HoMIDom/", ResponseNamespace="http://HoMIDom/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string GetIPSOAP() {
            object[] results = this.Invoke("GetIPSOAP", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetIPSOAPAsync() {
            this.GetIPSOAPAsync(null);
        }
        
        /// <remarks/>
        public void GetIPSOAPAsync(object userState) {
            if ((this.GetIPSOAPOperationCompleted == null)) {
                this.GetIPSOAPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetIPSOAPOperationCompleted);
            }
            this.InvokeAsync("GetIPSOAP", new object[0], this.GetIPSOAPOperationCompleted, userState);
        }
        
        private void OnGetIPSOAPOperationCompleted(object arg) {
            if ((this.GetIPSOAPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetIPSOAPCompleted(this, new GetIPSOAPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HoMIDom/IHoMIDom/GetLastStartTime", RequestNamespace="http://HoMIDom/", ResponseNamespace="http://HoMIDom/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetLastStartTime(out System.DateTime GetLastStartTimeResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool GetLastStartTimeResultSpecified) {
            object[] results = this.Invoke("GetLastStartTime", new object[0]);
            GetLastStartTimeResult = ((System.DateTime)(results[0]));
            GetLastStartTimeResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void GetLastStartTimeAsync() {
            this.GetLastStartTimeAsync(null);
        }
        
        /// <remarks/>
        public void GetLastStartTimeAsync(object userState) {
            if ((this.GetLastStartTimeOperationCompleted == null)) {
                this.GetLastStartTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLastStartTimeOperationCompleted);
            }
            this.InvokeAsync("GetLastStartTime", new object[0], this.GetLastStartTimeOperationCompleted, userState);
        }
        
        private void OnGetLastStartTimeOperationCompleted(object arg) {
            if ((this.GetLastStartTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLastStartTimeCompleted(this, new GetLastStartTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HoMIDom/IHoMIDom/GetHeureLeverSoleil", RequestNamespace="http://HoMIDom/", ResponseNamespace="http://HoMIDom/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string GetHeureLeverSoleil() {
            object[] results = this.Invoke("GetHeureLeverSoleil", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetHeureLeverSoleilAsync() {
            this.GetHeureLeverSoleilAsync(null);
        }
        
        /// <remarks/>
        public void GetHeureLeverSoleilAsync(object userState) {
            if ((this.GetHeureLeverSoleilOperationCompleted == null)) {
                this.GetHeureLeverSoleilOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHeureLeverSoleilOperationCompleted);
            }
            this.InvokeAsync("GetHeureLeverSoleil", new object[0], this.GetHeureLeverSoleilOperationCompleted, userState);
        }
        
        private void OnGetHeureLeverSoleilOperationCompleted(object arg) {
            if ((this.GetHeureLeverSoleilCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHeureLeverSoleilCompleted(this, new GetHeureLeverSoleilCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HoMIDom/IHoMIDom/GetHeureCoucherSoleil", RequestNamespace="http://HoMIDom/", ResponseNamespace="http://HoMIDom/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string GetHeureCoucherSoleil() {
            object[] results = this.Invoke("GetHeureCoucherSoleil", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetHeureCoucherSoleilAsync() {
            this.GetHeureCoucherSoleilAsync(null);
        }
        
        /// <remarks/>
        public void GetHeureCoucherSoleilAsync(object userState) {
            if ((this.GetHeureCoucherSoleilOperationCompleted == null)) {
                this.GetHeureCoucherSoleilOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHeureCoucherSoleilOperationCompleted);
            }
            this.InvokeAsync("GetHeureCoucherSoleil", new object[0], this.GetHeureCoucherSoleilOperationCompleted, userState);
        }
        
        private void OnGetHeureCoucherSoleilOperationCompleted(object arg) {
            if ((this.GetHeureCoucherSoleilCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHeureCoucherSoleilCompleted(this, new GetHeureCoucherSoleilCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HoMIDom/IHoMIDom/GetLongitude", RequestNamespace="http://HoMIDom/", ResponseNamespace="http://HoMIDom/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetLongitude(out double GetLongitudeResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool GetLongitudeResultSpecified) {
            object[] results = this.Invoke("GetLongitude", new object[0]);
            GetLongitudeResult = ((double)(results[0]));
            GetLongitudeResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void GetLongitudeAsync() {
            this.GetLongitudeAsync(null);
        }
        
        /// <remarks/>
        public void GetLongitudeAsync(object userState) {
            if ((this.GetLongitudeOperationCompleted == null)) {
                this.GetLongitudeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLongitudeOperationCompleted);
            }
            this.InvokeAsync("GetLongitude", new object[0], this.GetLongitudeOperationCompleted, userState);
        }
        
        private void OnGetLongitudeOperationCompleted(object arg) {
            if ((this.GetLongitudeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLongitudeCompleted(this, new GetLongitudeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HoMIDom/IHoMIDom/SetLongitude", RequestNamespace="http://HoMIDom/", ResponseNamespace="http://HoMIDom/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetLongitude([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string IdSrv, double Value, [System.Xml.Serialization.XmlIgnoreAttribute()] bool ValueSpecified) {
            this.Invoke("SetLongitude", new object[] {
                        IdSrv,
                        Value,
                        ValueSpecified});
        }
        
        /// <remarks/>
        public void SetLongitudeAsync(string IdSrv, double Value, bool ValueSpecified) {
            this.SetLongitudeAsync(IdSrv, Value, ValueSpecified, null);
        }
        
        /// <remarks/>
        public void SetLongitudeAsync(string IdSrv, double Value, bool ValueSpecified, object userState) {
            if ((this.SetLongitudeOperationCompleted == null)) {
                this.SetLongitudeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetLongitudeOperationCompleted);
            }
            this.InvokeAsync("SetLongitude", new object[] {
                        IdSrv,
                        Value,
                        ValueSpecified}, this.SetLongitudeOperationCompleted, userState);
        }
        
        private void OnSetLongitudeOperationCompleted(object arg) {
            if ((this.SetLongitudeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetLongitudeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HoMIDom/IHoMIDom/GetLatitude", RequestNamespace="http://HoMIDom/", ResponseNamespace="http://HoMIDom/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetLatitude(out double GetLatitudeResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool GetLatitudeResultSpecified) {
            object[] results = this.Invoke("GetLatitude", new object[0]);
            GetLatitudeResult = ((double)(results[0]));
            GetLatitudeResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void GetLatitudeAsync() {
            this.GetLatitudeAsync(null);
        }
        
        /// <remarks/>
        public void GetLatitudeAsync(object userState) {
            if ((this.GetLatitudeOperationCompleted == null)) {
                this.GetLatitudeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLatitudeOperationCompleted);
            }
            this.InvokeAsync("GetLatitude", new object[0], this.GetLatitudeOperationCompleted, userState);
        }
        
        private void OnGetLatitudeOperationCompleted(object arg) {
            if ((this.GetLatitudeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLatitudeCompleted(this, new GetLatitudeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HoMIDom/IHoMIDom/SetLatitude", RequestNamespace="http://HoMIDom/", ResponseNamespace="http://HoMIDom/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetLatitude([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string IdSrv, double Value, [System.Xml.Serialization.XmlIgnoreAttribute()] bool ValueSpecified) {
            this.Invoke("SetLatitude", new object[] {
                        IdSrv,
                        Value,
                        ValueSpecified});
        }
        
        /// <remarks/>
        public void SetLatitudeAsync(string IdSrv, double Value, bool ValueSpecified) {
            this.SetLatitudeAsync(IdSrv, Value, ValueSpecified, null);
        }
        
        /// <remarks/>
        public void SetLatitudeAsync(string IdSrv, double Value, bool ValueSpecified, object userState) {
            if ((this.SetLatitudeOperationCompleted == null)) {
                this.SetLatitudeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetLatitudeOperationCompleted);
            }
            this.InvokeAsync("SetLatitude", new object[] {
                        IdSrv,
                        Value,
                        ValueSpecified}, this.SetLatitudeOperationCompleted, userState);
        }
        
        private void OnSetLatitudeOperationCompleted(object arg) {
            if ((this.SetLatitudeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetLatitudeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HoMIDom/IHoMIDom/GetHeureCorrectionCoucher", RequestNamespace="http://HoMIDom/", ResponseNamespace="http://HoMIDom/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetHeureCorrectionCoucher(out int GetHeureCorrectionCoucherResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool GetHeureCorrectionCoucherResultSpecified) {
            object[] results = this.Invoke("GetHeureCorrectionCoucher", new object[0]);
            GetHeureCorrectionCoucherResult = ((int)(results[0]));
            GetHeureCorrectionCoucherResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void GetHeureCorrectionCoucherAsync() {
            this.GetHeureCorrectionCoucherAsync(null);
        }
        
        /// <remarks/>
        public void GetHeureCorrectionCoucherAsync(object userState) {
            if ((this.GetHeureCorrectionCoucherOperationCompleted == null)) {
                this.GetHeureCorrectionCoucherOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHeureCorrectionCoucherOperationCompleted);
            }
            this.InvokeAsync("GetHeureCorrectionCoucher", new object[0], this.GetHeureCorrectionCoucherOperationCompleted, userState);
        }
        
        private void OnGetHeureCorrectionCoucherOperationCompleted(object arg) {
            if ((this.GetHeureCorrectionCoucherCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHeureCorrectionCoucherCompleted(this, new GetHeureCorrectionCoucherCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HoMIDom/IHoMIDom/SetHeureCorrectionCoucher", RequestNamespace="http://HoMIDom/", ResponseNamespace="http://HoMIDom/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetHeureCorrectionCoucher([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string IdSrv, int Value, [System.Xml.Serialization.XmlIgnoreAttribute()] bool ValueSpecified) {
            this.Invoke("SetHeureCorrectionCoucher", new object[] {
                        IdSrv,
                        Value,
                        ValueSpecified});
        }
        
        /// <remarks/>
        public void SetHeureCorrectionCoucherAsync(string IdSrv, int Value, bool ValueSpecified) {
            this.SetHeureCorrectionCoucherAsync(IdSrv, Value, ValueSpecified, null);
        }
        
        /// <remarks/>
        public void SetHeureCorrectionCoucherAsync(string IdSrv, int Value, bool ValueSpecified, object userState) {
            if ((this.SetHeureCorrectionCoucherOperationCompleted == null)) {
                this.SetHeureCorrectionCoucherOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetHeureCorrectionCoucherOperationCompleted);
            }
            this.InvokeAsync("SetHeureCorrectionCoucher", new object[] {
                        IdSrv,
                        Value,
                        ValueSpecified}, this.SetHeureCorrectionCoucherOperationCompleted, userState);
        }
        
        private void OnSetHeureCorrectionCoucherOperationCompleted(object arg) {
            if ((this.SetHeureCorrectionCoucherCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetHeureCorrectionCoucherCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HoMIDom/IHoMIDom/GetHeureCorrectionLever", RequestNamespace="http://HoMIDom/", ResponseNamespace="http://HoMIDom/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetHeureCorrectionLever(out int GetHeureCorrectionLeverResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool GetHeureCorrectionLeverResultSpecified) {
            object[] results = this.Invoke("GetHeureCorrectionLever", new object[0]);
            GetHeureCorrectionLeverResult = ((int)(results[0]));
            GetHeureCorrectionLeverResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void GetHeureCorrectionLeverAsync() {
            this.GetHeureCorrectionLeverAsync(null);
        }
        
        /// <remarks/>
        public void GetHeureCorrectionLeverAsync(object userState) {
            if ((this.GetHeureCorrectionLeverOperationCompleted == null)) {
                this.GetHeureCorrectionLeverOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHeureCorrectionLeverOperationCompleted);
            }
            this.InvokeAsync("GetHeureCorrectionLever", new object[0], this.GetHeureCorrectionLeverOperationCompleted, userState);
        }
        
        private void OnGetHeureCorrectionLeverOperationCompleted(object arg) {
            if ((this.GetHeureCorrectionLeverCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHeureCorrectionLeverCompleted(this, new GetHeureCorrectionLeverCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HoMIDom/IHoMIDom/SetHeureCorrectionLever", RequestNamespace="http://HoMIDom/", ResponseNamespace="http://HoMIDom/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetHeureCorrectionLever([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string IdSrv, int Value, [System.Xml.Serialization.XmlIgnoreAttribute()] bool ValueSpecified) {
            this.Invoke("SetHeureCorrectionLever", new object[] {
                        IdSrv,
                        Value,
                        ValueSpecified});
        }
        
        /// <remarks/>
        public void SetHeureCorrectionLeverAsync(string IdSrv, int Value, bool ValueSpecified) {
            this.SetHeureCorrectionLeverAsync(IdSrv, Value, ValueSpecified, null);
        }
        
        /// <remarks/>
        public void SetHeureCorrectionLeverAsync(string IdSrv, int Value, bool ValueSpecified, object userState) {
            if ((this.SetHeureCorrectionLeverOperationCompleted == null)) {
                this.SetHeureCorrectionLeverOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetHeureCorrectionLeverOperationCompleted);
            }
            this.InvokeAsync("SetHeureCorrectionLever", new object[] {
                        IdSrv,
                        Value,
                        ValueSpecified}, this.SetHeureCorrectionLeverOperationCompleted, userState);
        }
        
        private void OnSetHeureCorrectionLeverOperationCompleted(object arg) {
            if ((this.SetHeureCorrectionLeverCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetHeureCorrectionLeverCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HoMIDom/IHoMIDom/GetByteFromImage", RequestNamespace="http://HoMIDom/", ResponseNamespace="http://HoMIDom/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", IsNullable=true)]
        public byte[] GetByteFromImage([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string file) {
            object[] results = this.Invoke("GetByteFromImage", new object[] {
                        file});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetByteFromImageAsync(string file) {
            this.GetByteFromImageAsync(file, null);
        }
        
        /// <remarks/>
        public void GetByteFromImageAsync(string file, object userState) {
            if ((this.GetByteFromImageOperationCompleted == null)) {
                this.GetByteFromImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetByteFromImageOperationCompleted);
            }
            this.InvokeAsync("GetByteFromImage", new object[] {
                        file}, this.GetByteFromImageOperationCompleted, userState);
        }
        
        private void OnGetByteFromImageOperationCompleted(object arg) {
            if ((this.GetByteFromImageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetByteFromImageCompleted(this, new GetByteFromImageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HoMIDom/IHoMIDom/GetListOfImage", RequestNamespace="http://HoMIDom/", ResponseNamespace="http://HoMIDom/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/HoMIDom.HoMIDom")]
        public ImageFile[] GetListOfImage() {
            object[] results = this.Invoke("GetListOfImage", new object[0]);
            return ((ImageFile[])(results[0]));
        }
        
        /// <remarks/>
        public void GetListOfImageAsync() {
            this.GetListOfImageAsync(null);
        }
        
        /// <remarks/>
        public void GetListOfImageAsync(object userState) {
            if ((this.GetListOfImageOperationCompleted == null)) {
                this.GetListOfImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetListOfImageOperationCompleted);
            }
            this.InvokeAsync("GetListOfImage", new object[0], this.GetListOfImageOperationCompleted, userState);
        }
        
        private void OnGetListOfImageOperationCompleted(object arg) {
            if ((this.GetListOfImageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetListOfImageCompleted(this, new GetListOfImageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HoMIDom/IHoMIDom/GetAllListHisto", RequestNamespace="http://HoMIDom/", ResponseNamespace="http://HoMIDom/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/HoMIDom.HoMIDom")]
        public Historisation[] GetAllListHisto([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string IdSrv) {
            object[] results = this.Invoke("GetAllListHisto", new object[] {
                        IdSrv});
            return ((Historisation[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllListHistoAsync(string IdSrv) {
            this.GetAllListHistoAsync(IdSrv, null);
        }
        
        /// <remarks/>
        public void GetAllListHistoAsync(string IdSrv, object userState) {
            if ((this.GetAllListHistoOperationCompleted == null)) {
                this.GetAllListHistoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllListHistoOperationCompleted);
            }
            this.InvokeAsync("GetAllListHisto", new object[] {
                        IdSrv}, this.GetAllListHistoOperationCompleted, userState);
        }
        
        private void OnGetAllListHistoOperationCompleted(object arg) {
            if ((this.GetAllListHistoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllListHistoCompleted(this, new GetAllListHistoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HoMIDom/IHoMIDom/GetHisto", RequestNamespace="http://HoMIDom/", ResponseNamespace="http://HoMIDom/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/HoMIDom.HoMIDom")]
        public Historisation[] GetHisto([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string IdSrv, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Source, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string idDevice) {
            object[] results = this.Invoke("GetHisto", new object[] {
                        IdSrv,
                        Source,
                        idDevice});
            return ((Historisation[])(results[0]));
        }
        
        /// <remarks/>
        public void GetHistoAsync(string IdSrv, string Source, string idDevice) {
            this.GetHistoAsync(IdSrv, Source, idDevice, null);
        }
        
        /// <remarks/>
        public void GetHistoAsync(string IdSrv, string Source, string idDevice, object userState) {
            if ((this.GetHistoOperationCompleted == null)) {
                this.GetHistoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHistoOperationCompleted);
            }
            this.InvokeAsync("GetHisto", new object[] {
                        IdSrv,
                        Source,
                        idDevice}, this.GetHistoOperationCompleted, userState);
        }
        
        private void OnGetHistoOperationCompleted(object arg) {
            if ((this.GetHistoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHistoCompleted(this, new GetHistoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HoMIDom/IHoMIDom/DeleteExtensionAudio", RequestNamespace="http://HoMIDom/", ResponseNamespace="http://HoMIDom/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteExtensionAudio([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string IdSrv, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string NomExtension, out int DeleteExtensionAudioResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool DeleteExtensionAudioResultSpecified) {
            object[] results = this.Invoke("DeleteExtensionAudio", new object[] {
                        IdSrv,
                        NomExtension});
            DeleteExtensionAudioResult = ((int)(results[0]));
            DeleteExtensionAudioResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void DeleteExtensionAudioAsync(string IdSrv, string NomExtension) {
            this.DeleteExtensionAudioAsync(IdSrv, NomExtension, null);
        }
        
        /// <remarks/>
        public void DeleteExtensionAudioAsync(string IdSrv, string NomExtension, object userState) {
            if ((this.DeleteExtensionAudioOperationCompleted == null)) {
                this.DeleteExtensionAudioOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteExtensionAudioOperationCompleted);
            }
            this.InvokeAsync("DeleteExtensionAudio", new object[] {
                        IdSrv,
                        NomExtension}, this.DeleteExtensionAudioOperationCompleted, userState);
        }
        
        private void OnDeleteExtensionAudioOperationCompleted(object arg) {
            if ((this.DeleteExtensionAudioCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteExtensionAudioCompleted(this, new DeleteExtensionAudioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HoMIDom/IHoMIDom/NewExtensionAudio", RequestNamespace="http://HoMIDom/", ResponseNamespace="http://HoMIDom/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void NewExtensionAudio([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string IdSrv, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string NomExtension, bool Enable, [System.Xml.Serialization.XmlIgnoreAttribute()] bool EnableSpecified, out int NewExtensionAudioResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool NewExtensionAudioResultSpecified) {
            object[] results = this.Invoke("NewExtensionAudio", new object[] {
                        IdSrv,
                        NomExtension,
                        Enable,
                        EnableSpecified});
            NewExtensionAudioResult = ((int)(results[0]));
            NewExtensionAudioResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void NewExtensionAudioAsync(string IdSrv, string NomExtension, bool Enable, bool EnableSpecified) {
            this.NewExtensionAudioAsync(IdSrv, NomExtension, Enable, EnableSpecified, null);
        }
        
        /// <remarks/>
        public void NewExtensionAudioAsync(string IdSrv, string NomExtension, bool Enable, bool EnableSpecified, object userState) {
            if ((this.NewExtensionAudioOperationCompleted == null)) {
                this.NewExtensionAudioOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNewExtensionAudioOperationCompleted);
            }
            this.InvokeAsync("NewExtensionAudio", new object[] {
                        IdSrv,
                        NomExtension,
                        Enable,
                        EnableSpecified}, this.NewExtensionAudioOperationCompleted, userState);
        }
        
        private void OnNewExtensionAudioOperationCompleted(object arg) {
            if ((this.NewExtensionAudioCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NewExtensionAudioCompleted(this, new NewExtensionAudioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HoMIDom/IHoMIDom/EnableExtensionAudio", RequestNamespace="http://HoMIDom/", ResponseNamespace="http://HoMIDom/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EnableExtensionAudio([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string IdSrv, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string NomExtension, bool Enable, [System.Xml.Serialization.XmlIgnoreAttribute()] bool EnableSpecified, out int EnableExtensionAudioResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool EnableExtensionAudioResultSpecified) {
            object[] results = this.Invoke("EnableExtensionAudio", new object[] {
                        IdSrv,
                        NomExtension,
                        Enable,
                        EnableSpecified});
            EnableExtensionAudioResult = ((int)(results[0]));
            EnableExtensionAudioResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void EnableExtensionAudioAsync(string IdSrv, string NomExtension, bool Enable, bool EnableSpecified) {
            this.EnableExtensionAudioAsync(IdSrv, NomExtension, Enable, EnableSpecified, null);
        }
        
        /// <remarks/>
        public void EnableExtensionAudioAsync(string IdSrv, string NomExtension, bool Enable, bool EnableSpecified, object userState) {
            if ((this.EnableExtensionAudioOperationCompleted == null)) {
                this.EnableExtensionAudioOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEnableExtensionAudioOperationCompleted);
            }
            this.InvokeAsync("EnableExtensionAudio", new object[] {
                        IdSrv,
                        NomExtension,
                        Enable,
                        EnableSpecified}, this.EnableExtensionAudioOperationCompleted, userState);
        }
        
        private void OnEnableExtensionAudioOperationCompleted(object arg) {
            if ((this.EnableExtensionAudioCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EnableExtensionAudioCompleted(this, new EnableExtensionAudioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HoMIDom/IHoMIDom/DeleteRepertoireAudio", RequestNamespace="http://HoMIDom/", ResponseNamespace="http://HoMIDom/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteRepertoireAudio([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string IdSrv, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string NomRepertoire, out int DeleteRepertoireAudioResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool DeleteRepertoireAudioResultSpecified) {
            object[] results = this.Invoke("DeleteRepertoireAudio", new object[] {
                        IdSrv,
                        NomRepertoire});
            DeleteRepertoireAudioResult = ((int)(results[0]));
            DeleteRepertoireAudioResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void DeleteRepertoireAudioAsync(string IdSrv, string NomRepertoire) {
            this.DeleteRepertoireAudioAsync(IdSrv, NomRepertoire, null);
        }
        
        /// <remarks/>
        public void DeleteRepertoireAudioAsync(string IdSrv, string NomRepertoire, object userState) {
            if ((this.DeleteRepertoireAudioOperationCompleted == null)) {
                this.DeleteRepertoireAudioOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteRepertoireAudioOperationCompleted);
            }
            this.InvokeAsync("DeleteRepertoireAudio", new object[] {
                        IdSrv,
                        NomRepertoire}, this.DeleteRepertoireAudioOperationCompleted, userState);
        }
        
        private void OnDeleteRepertoireAudioOperationCompleted(object arg) {
            if ((this.DeleteRepertoireAudioCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteRepertoireAudioCompleted(this, new DeleteRepertoireAudioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HoMIDom/IHoMIDom/NewRepertoireAudio", RequestNamespace="http://HoMIDom/", ResponseNamespace="http://HoMIDom/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void NewRepertoireAudio([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string IdSrv, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string NomRepertoire, bool Enable, [System.Xml.Serialization.XmlIgnoreAttribute()] bool EnableSpecified, out int NewRepertoireAudioResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool NewRepertoireAudioResultSpecified) {
            object[] results = this.Invoke("NewRepertoireAudio", new object[] {
                        IdSrv,
                        NomRepertoire,
                        Enable,
                        EnableSpecified});
            NewRepertoireAudioResult = ((int)(results[0]));
            NewRepertoireAudioResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void NewRepertoireAudioAsync(string IdSrv, string NomRepertoire, bool Enable, bool EnableSpecified) {
            this.NewRepertoireAudioAsync(IdSrv, NomRepertoire, Enable, EnableSpecified, null);
        }
        
        /// <remarks/>
        public void NewRepertoireAudioAsync(string IdSrv, string NomRepertoire, bool Enable, bool EnableSpecified, object userState) {
            if ((this.NewRepertoireAudioOperationCompleted == null)) {
                this.NewRepertoireAudioOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNewRepertoireAudioOperationCompleted);
            }
            this.InvokeAsync("NewRepertoireAudio", new object[] {
                        IdSrv,
                        NomRepertoire,
                        Enable,
                        EnableSpecified}, this.NewRepertoireAudioOperationCompleted, userState);
        }
        
        private void OnNewRepertoireAudioOperationCompleted(object arg) {
            if ((this.NewRepertoireAudioCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NewRepertoireAudioCompleted(this, new NewRepertoireAudioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/HoMIDom.HoMIDom")]
    public partial class Trigger {
        
        private string _ConditionDeviceIdField;
        
        private string _ConditionDevicePropertyField;
        
        private string _ConditionTimeField;
        
        private string _DescriptionField;
        
        private bool _EnableField;
        
        private string _IDField;
        
        private string[] _ListMacroField;
        
        private string _NomField;
        
        private System.DateTime _ProchainedateheureField;
        
        private TriggerTypeTrigger _TypeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string _ConditionDeviceId {
            get {
                return this._ConditionDeviceIdField;
            }
            set {
                this._ConditionDeviceIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string _ConditionDeviceProperty {
            get {
                return this._ConditionDevicePropertyField;
            }
            set {
                this._ConditionDevicePropertyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string _ConditionTime {
            get {
                return this._ConditionTimeField;
            }
            set {
                this._ConditionTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string _Description {
            get {
                return this._DescriptionField;
            }
            set {
                this._DescriptionField = value;
            }
        }
        
        /// <remarks/>
        public bool _Enable {
            get {
                return this._EnableField;
            }
            set {
                this._EnableField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string _ID {
            get {
                return this._IDField;
            }
            set {
                this._IDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public string[] _ListMacro {
            get {
                return this._ListMacroField;
            }
            set {
                this._ListMacroField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string _Nom {
            get {
                return this._NomField;
            }
            set {
                this._NomField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime _Prochainedateheure {
            get {
                return this._ProchainedateheureField;
            }
            set {
                this._ProchainedateheureField = value;
            }
        }
        
        /// <remarks/>
        public TriggerTypeTrigger _Type {
            get {
                return this._TypeField;
            }
            set {
                this._TypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="Trigger.TypeTrigger", Namespace="http://schemas.datacontract.org/2004/07/HoMIDom.HoMIDom")]
    public enum TriggerTypeTrigger {
        
        /// <remarks/>
        TIMER,
        
        /// <remarks/>
        DEVICE,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/HoMIDom.HoMIDom")]
    public partial class Historisation {
        
        private System.DateTime _datetimeField;
        
        private string _iddeviceField;
        
        private string _nomField;
        
        private bool _selectField;
        
        private string _valueField;
        
        /// <remarks/>
        public System.DateTime _datetime {
            get {
                return this._datetimeField;
            }
            set {
                this._datetimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string _iddevice {
            get {
                return this._iddeviceField;
            }
            set {
                this._iddeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string _nom {
            get {
                return this._nomField;
            }
            set {
                this._nomField = value;
            }
        }
        
        /// <remarks/>
        public bool _select {
            get {
                return this._selectField;
            }
            set {
                this._selectField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string _value {
            get {
                return this._valueField;
            }
            set {
                this._valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/HoMIDom.HoMIDom")]
    public partial class ImageFile {
        
        private string _FileNameField;
        
        private string _PathField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string _FileName {
            get {
                return this._FileNameField;
            }
            set {
                this._FileNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string _Path {
            get {
                return this._PathField;
            }
            set {
                this._PathField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="Action.ActionVB", Namespace="http://schemas.datacontract.org/2004/07/HoMIDom.HoMIDom")]
    public partial class ActionActionVB {
        
        private string labelField;
        
        private string scriptField;
        
        private System.DateTime timingField;
        
        private bool timingFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Label {
            get {
                return this.labelField;
            }
            set {
                this.labelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Script {
            get {
                return this.scriptField;
            }
            set {
                this.scriptField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Timing {
            get {
                return this.timingField;
            }
            set {
                this.timingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TimingSpecified {
            get {
                return this.timingFieldSpecified;
            }
            set {
                this.timingFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="Action.ActionDevice", Namespace="http://schemas.datacontract.org/2004/07/HoMIDom.HoMIDom")]
    public partial class ActionActionDevice {
        
        private string _IdDeviceField;
        
        private string _MethodField;
        
        private object[] _ParametresField;
        
        private System.DateTime _TimingField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string _IdDevice {
            get {
                return this._IdDeviceField;
            }
            set {
                this._IdDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string _Method {
            get {
                return this._MethodField;
            }
            set {
                this._MethodField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public object[] _Parametres {
            get {
                return this._ParametresField;
            }
            set {
                this._ParametresField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime _Timing {
            get {
                return this._TimingField;
            }
            set {
                this._TimingField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="Action.ActionMail", Namespace="http://schemas.datacontract.org/2004/07/HoMIDom.HoMIDom")]
    public partial class ActionActionMail {
        
        private string _MessageField;
        
        private string _SujetField;
        
        private System.DateTime _TimingField;
        
        private string _UserIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string _Message {
            get {
                return this._MessageField;
            }
            set {
                this._MessageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string _Sujet {
            get {
                return this._SujetField;
            }
            set {
                this._SujetField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime _Timing {
            get {
                return this._TimingField;
            }
            set {
                this._TimingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string _UserId {
            get {
                return this._UserIdField;
            }
            set {
                this._UserIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="Action.Condition", Namespace="http://schemas.datacontract.org/2004/07/HoMIDom.HoMIDom")]
    public partial class ActionCondition {
        
        private ActionTypeSigne conditionField;
        
        private bool conditionFieldSpecified;
        
        private string dateTimeField;
        
        private string idDeviceField;
        
        private ActionTypeOperateur operateurField;
        
        private bool operateurFieldSpecified;
        
        private string propertyDeviceField;
        
        private ActionTypeCondition typeField;
        
        private bool typeFieldSpecified;
        
        private object valueField;
        
        /// <remarks/>
        public ActionTypeSigne Condition {
            get {
                return this.conditionField;
            }
            set {
                this.conditionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ConditionSpecified {
            get {
                return this.conditionFieldSpecified;
            }
            set {
                this.conditionFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string DateTime {
            get {
                return this.dateTimeField;
            }
            set {
                this.dateTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string IdDevice {
            get {
                return this.idDeviceField;
            }
            set {
                this.idDeviceField = value;
            }
        }
        
        /// <remarks/>
        public ActionTypeOperateur Operateur {
            get {
                return this.operateurField;
            }
            set {
                this.operateurField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OperateurSpecified {
            get {
                return this.operateurFieldSpecified;
            }
            set {
                this.operateurFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string PropertyDevice {
            get {
                return this.propertyDeviceField;
            }
            set {
                this.propertyDeviceField = value;
            }
        }
        
        /// <remarks/>
        public ActionTypeCondition Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypeSpecified {
            get {
                return this.typeFieldSpecified;
            }
            set {
                this.typeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public object Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="Action.TypeSigne", Namespace="http://schemas.datacontract.org/2004/07/HoMIDom.HoMIDom")]
    public enum ActionTypeSigne {
        
        /// <remarks/>
        Egal,
        
        /// <remarks/>
        Inferieur,
        
        /// <remarks/>
        InferieurEgal,
        
        /// <remarks/>
        Superieur,
        
        /// <remarks/>
        SuperieurEgal,
        
        /// <remarks/>
        Different,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="Action.TypeOperateur", Namespace="http://schemas.datacontract.org/2004/07/HoMIDom.HoMIDom")]
    public enum ActionTypeOperateur {
        
        /// <remarks/>
        NONE,
        
        /// <remarks/>
        AND,
        
        /// <remarks/>
        OR,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="Action.TypeCondition", Namespace="http://schemas.datacontract.org/2004/07/HoMIDom.HoMIDom")]
    public enum ActionTypeCondition {
        
        /// <remarks/>
        DateTime,
        
        /// <remarks/>
        Device,
        
        /// <remarks/>
        Parenthese,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="Action.ActionIf", Namespace="http://schemas.datacontract.org/2004/07/HoMIDom.HoMIDom")]
    public partial class ActionActionIf {
        
        private ActionCondition[] conditionsField;
        
        private object[] listFalseField;
        
        private object[] listTrueField;
        
        private System.DateTime timingField;
        
        private bool timingFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public ActionCondition[] Conditions {
            get {
                return this.conditionsField;
            }
            set {
                this.conditionsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public object[] ListFalse {
            get {
                return this.listFalseField;
            }
            set {
                this.listFalseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public object[] ListTrue {
            get {
                return this.listTrueField;
            }
            set {
                this.listTrueField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Timing {
            get {
                return this.timingField;
            }
            set {
                this.timingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TimingSpecified {
            get {
                return this.timingFieldSpecified;
            }
            set {
                this.timingFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="Action.ActionMacro", Namespace="http://schemas.datacontract.org/2004/07/HoMIDom.HoMIDom")]
    public partial class ActionActionMacro {
        
        private string idMacroField;
        
        private System.DateTime timingField;
        
        private bool timingFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string IdMacro {
            get {
                return this.idMacroField;
            }
            set {
                this.idMacroField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Timing {
            get {
                return this.timingField;
            }
            set {
                this.timingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TimingSpecified {
            get {
                return this.timingFieldSpecified;
            }
            set {
                this.timingFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="Action.ActionHttp", Namespace="http://schemas.datacontract.org/2004/07/HoMIDom.HoMIDom")]
    public partial class ActionActionHttp {
        
        private string commandeField;
        
        private System.DateTime timingField;
        
        private bool timingFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Commande {
            get {
                return this.commandeField;
            }
            set {
                this.commandeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Timing {
            get {
                return this.timingField;
            }
            set {
                this.timingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TimingSpecified {
            get {
                return this.timingFieldSpecified;
            }
            set {
                this.timingFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="Action.ActionLogEventHomidom", Namespace="http://schemas.datacontract.org/2004/07/HoMIDom.HoMIDom")]
    public partial class ActionActionLogEventHomidom {
        
        private string fonctionField;
        
        private string messageField;
        
        private System.DateTime timingField;
        
        private bool timingFieldSpecified;
        
        private ServerTypeLog typeField;
        
        private bool typeFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Fonction {
            get {
                return this.fonctionField;
            }
            set {
                this.fonctionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Timing {
            get {
                return this.timingField;
            }
            set {
                this.timingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TimingSpecified {
            get {
                return this.timingFieldSpecified;
            }
            set {
                this.timingFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public ServerTypeLog Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypeSpecified {
            get {
                return this.typeFieldSpecified;
            }
            set {
                this.typeFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="Server.TypeLog", Namespace="http://schemas.datacontract.org/2004/07/HoMIDom.HoMIDom")]
    public enum ServerTypeLog {
        
        /// <remarks/>
        INFO,
        
        /// <remarks/>
        ACTION,
        
        /// <remarks/>
        MESSAGE,
        
        /// <remarks/>
        VALEUR_CHANGE,
        
        /// <remarks/>
        VALEUR_INCHANGE,
        
        /// <remarks/>
        VALEUR_INCHANGE_PRECISION,
        
        /// <remarks/>
        VALEUR_INCHANGE_LASTETAT,
        
        /// <remarks/>
        ERREUR,
        
        /// <remarks/>
        ERREUR_CRITIQUE,
        
        /// <remarks/>
        DEBUG,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="Action.ActionLogEvent", Namespace="http://schemas.datacontract.org/2004/07/HoMIDom.HoMIDom")]
    public partial class ActionActionLogEvent {
        
        private int eventidField;
        
        private bool eventidFieldSpecified;
        
        private string messageField;
        
        private System.DateTime timingField;
        
        private bool timingFieldSpecified;
        
        private ServerTypeEventLog typeField;
        
        private bool typeFieldSpecified;
        
        /// <remarks/>
        public int Eventid {
            get {
                return this.eventidField;
            }
            set {
                this.eventidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EventidSpecified {
            get {
                return this.eventidFieldSpecified;
            }
            set {
                this.eventidFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Timing {
            get {
                return this.timingField;
            }
            set {
                this.timingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TimingSpecified {
            get {
                return this.timingFieldSpecified;
            }
            set {
                this.timingFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public ServerTypeEventLog Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypeSpecified {
            get {
                return this.typeFieldSpecified;
            }
            set {
                this.typeFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="Server.TypeEventLog", Namespace="http://schemas.datacontract.org/2004/07/HoMIDom.HoMIDom")]
    public enum ServerTypeEventLog {
        
        /// <remarks/>
        ERREUR,
        
        /// <remarks/>
        WARNING,
        
        /// <remarks/>
        INFORMATION,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/HoMIDom.HoMIDom")]
    public partial class Macro {
        
        private string _DescriptionField;
        
        private bool _EnableField;
        
        private string _IDField;
        
        private object[] _ListActionsField;
        
        private string _NomField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string _Description {
            get {
                return this._DescriptionField;
            }
            set {
                this._DescriptionField = value;
            }
        }
        
        /// <remarks/>
        public bool _Enable {
            get {
                return this._EnableField;
            }
            set {
                this._EnableField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string _ID {
            get {
                return this._IDField;
            }
            set {
                this._IDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public object[] _ListActions {
            get {
                return this._ListActionsField;
            }
            set {
                this._ListActionsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string _Nom {
            get {
                return this._NomField;
            }
            set {
                this._NomField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="Action.ActionDos", Namespace="http://schemas.datacontract.org/2004/07/HoMIDom.HoMIDom")]
    public partial class ActionActionDos {
        
        private string argumentsField;
        
        private string fichierField;
        
        private System.DateTime timingField;
        
        private bool timingFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Arguments {
            get {
                return this.argumentsField;
            }
            set {
                this.argumentsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Fichier {
            get {
                return this.fichierField;
            }
            set {
                this.fichierField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Timing {
            get {
                return this.timingField;
            }
            set {
                this.timingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TimingSpecified {
            get {
                return this.timingFieldSpecified;
            }
            set {
                this.timingFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="Action.ActionSpeech", Namespace="http://schemas.datacontract.org/2004/07/HoMIDom.HoMIDom")]
    public partial class ActionActionSpeech {
        
        private string messageField;
        
        private System.DateTime timingField;
        
        private bool timingFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Timing {
            get {
                return this.timingField;
            }
            set {
                this.timingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TimingSpecified {
            get {
                return this.timingFieldSpecified;
            }
            set {
                this.timingFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="Zone.Element_Zone", Namespace="http://schemas.datacontract.org/2004/07/HoMIDom.HoMIDom")]
    public partial class ZoneElement_Zone {
        
        private string _ElementIDField;
        
        private bool _VisibleField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string _ElementID {
            get {
                return this._ElementIDField;
            }
            set {
                this._ElementIDField = value;
            }
        }
        
        /// <remarks/>
        public bool _Visible {
            get {
                return this._VisibleField;
            }
            set {
                this._VisibleField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/HoMIDom.HoMIDom")]
    public partial class Zone {
        
        private string _IconField;
        
        private string _IdField;
        
        private string _ImageField;
        
        private ZoneElement_Zone[] _ListElementField;
        
        private string _NameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string _Icon {
            get {
                return this._IconField;
            }
            set {
                this._IconField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string _Id {
            get {
                return this._IdField;
            }
            set {
                this._IdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string _Image {
            get {
                return this._ImageField;
            }
            set {
                this._ImageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public ZoneElement_Zone[] _ListElement {
            get {
                return this._ListElementField;
            }
            set {
                this._ListElementField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string _Name {
            get {
                return this._NameField;
            }
            set {
                this._NameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="Driver.Parametre", Namespace="http://schemas.datacontract.org/2004/07/HoMIDom.HoMIDom")]
    public partial class DriverParametre {
        
        private string descriptionField;
        
        private string nomField;
        
        private object valeurField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Nom {
            get {
                return this.nomField;
            }
            set {
                this.nomField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public object Valeur {
            get {
                return this.valeurField;
            }
            set {
                this.valeurField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="Driver.cLabels", Namespace="http://schemas.datacontract.org/2004/07/HoMIDom.HoMIDom")]
    public partial class DrivercLabels {
        
        private string labelChampField;
        
        private string nomChampField;
        
        private string parametreField;
        
        private string tooltipField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string LabelChamp {
            get {
                return this.labelChampField;
            }
            set {
                this.labelChampField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string NomChamp {
            get {
                return this.nomChampField;
            }
            set {
                this.nomChampField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Parametre {
            get {
                return this.parametreField;
            }
            set {
                this.parametreField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Tooltip {
            get {
                return this.tooltipField;
            }
            set {
                this.tooltipField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/HoMIDom.HoMIDom")]
    public partial class TemplateDriver {
        
        private string _ComField;
        
        private string _DescriptionField;
        
        private DeviceAction[] _DeviceActionField;
        
        private string[] _DeviceSupportField;
        
        private bool _EnableField;
        
        private string _IDField;
        
        private string _IP_TCPField;
        
        private string _IP_UDPField;
        
        private bool _IsConnectField;
        
        private DrivercLabels[] _LabelsDeviceField;
        
        private DrivercLabels[] _LabelsDriverField;
        
        private string _ModeleField;
        
        private string _NomField;
        
        private DriverParametre[] _ParametresField;
        
        private string _PictureField;
        
        private string _Port_TCPField;
        
        private string _Port_UDPField;
        
        private string _ProtocolField;
        
        private int _RefreshField;
        
        private bool _StartautoField;
        
        private string _VersionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string _Com {
            get {
                return this._ComField;
            }
            set {
                this._ComField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string _Description {
            get {
                return this._DescriptionField;
            }
            set {
                this._DescriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public DeviceAction[] _DeviceAction {
            get {
                return this._DeviceActionField;
            }
            set {
                this._DeviceActionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public string[] _DeviceSupport {
            get {
                return this._DeviceSupportField;
            }
            set {
                this._DeviceSupportField = value;
            }
        }
        
        /// <remarks/>
        public bool _Enable {
            get {
                return this._EnableField;
            }
            set {
                this._EnableField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string _ID {
            get {
                return this._IDField;
            }
            set {
                this._IDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string _IP_TCP {
            get {
                return this._IP_TCPField;
            }
            set {
                this._IP_TCPField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string _IP_UDP {
            get {
                return this._IP_UDPField;
            }
            set {
                this._IP_UDPField = value;
            }
        }
        
        /// <remarks/>
        public bool _IsConnect {
            get {
                return this._IsConnectField;
            }
            set {
                this._IsConnectField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public DrivercLabels[] _LabelsDevice {
            get {
                return this._LabelsDeviceField;
            }
            set {
                this._LabelsDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public DrivercLabels[] _LabelsDriver {
            get {
                return this._LabelsDriverField;
            }
            set {
                this._LabelsDriverField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string _Modele {
            get {
                return this._ModeleField;
            }
            set {
                this._ModeleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string _Nom {
            get {
                return this._NomField;
            }
            set {
                this._NomField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public DriverParametre[] _Parametres {
            get {
                return this._ParametresField;
            }
            set {
                this._ParametresField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string _Picture {
            get {
                return this._PictureField;
            }
            set {
                this._PictureField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string _Port_TCP {
            get {
                return this._Port_TCPField;
            }
            set {
                this._Port_TCPField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string _Port_UDP {
            get {
                return this._Port_UDPField;
            }
            set {
                this._Port_UDPField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string _Protocol {
            get {
                return this._ProtocolField;
            }
            set {
                this._ProtocolField = value;
            }
        }
        
        /// <remarks/>
        public int _Refresh {
            get {
                return this._RefreshField;
            }
            set {
                this._RefreshField = value;
            }
        }
        
        /// <remarks/>
        public bool _Startauto {
            get {
                return this._StartautoField;
            }
            set {
                this._StartautoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string _Version {
            get {
                return this._VersionField;
            }
            set {
                this._VersionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/HoMIDom.HoMIDom")]
    public partial class DeviceAction {
        
        private string nomField;
        
        private DeviceActionParametre[] parametresField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Nom {
            get {
                return this.nomField;
            }
            set {
                this.nomField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public DeviceActionParametre[] Parametres {
            get {
                return this.parametresField;
            }
            set {
                this.parametresField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="DeviceAction.Parametre", Namespace="http://schemas.datacontract.org/2004/07/HoMIDom.HoMIDom")]
    public partial class DeviceActionParametre {
        
        private string nomField;
        
        private string typeField;
        
        private object valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Nom {
            get {
                return this.nomField;
            }
            set {
                this.nomField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public object Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="Device.DeviceCommande", Namespace="http://schemas.datacontract.org/2004/07/HoMIDom.HoMIDom")]
    public partial class DeviceDeviceCommande {
        
        private int _CountParamField;
        
        private string _DescriptionCommandField;
        
        private string _NameCommandField;
        
        /// <remarks/>
        public int _CountParam {
            get {
                return this._CountParamField;
            }
            set {
                this._CountParamField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string _DescriptionCommand {
            get {
                return this._DescriptionCommandField;
            }
            set {
                this._DescriptionCommandField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string _NameCommand {
            get {
                return this._NameCommandField;
            }
            set {
                this._NameCommandField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/HoMIDom.HoMIDom")]
    public partial class TemplateDevice {
        
        private TelecommandeCommandes[] commandesField;
        
        private string _Adresse1Field;
        
        private string _Adresse2Field;
        
        private string _ConditionActuelField;
        
        private string _ConditionJ1Field;
        
        private string _ConditionJ2Field;
        
        private string _ConditionJ3Field;
        
        private string _ConditionTodayField;
        
        private double _CorrectionField;
        
        private System.DateTime _DateCreatedField;
        
        private string _DescriptionField;
        
        private DeviceAction[] _DeviceActionField;
        
        private string _DriverIdField;
        
        private bool _EnableField;
        
        private string _FormatageField;
        
        private string _HumActuelField;
        
        private string _IDField;
        
        private string _IconActuelField;
        
        private string _IconJ1Field;
        
        private string _IconJ2Field;
        
        private string _IconJ3Field;
        
        private string _IconTodayField;
        
        private string _JourJ1Field;
        
        private string _JourJ2Field;
        
        private string _JourJ3Field;
        
        private string _JourTodayField;
        
        private System.DateTime _LastChangeField;
        
        private int _LastChangeDureeField;
        
        private bool _LastEtatField;
        
        private DeviceDeviceCommande[] _ListCommandPlusField;
        
        private string _MaxJ1Field;
        
        private string _MaxJ2Field;
        
        private string _MaxJ3Field;
        
        private string _MaxTodayField;
        
        private string _MinJ1Field;
        
        private string _MinJ2Field;
        
        private string _MinJ3Field;
        
        private string _MinTodayField;
        
        private string _ModeleField;
        
        private string _NameField;
        
        private string _PictureField;
        
        private double _PrecisionField;
        
        private double _RefreshField;
        
        private bool _SoloField;
        
        private string _TempActuelField;
        
        private DeviceListeDevices _TypeField;
        
        private object _ValueField;
        
        private double _ValueDefField;
        
        private double _ValueLastField;
        
        private double _ValueMaxField;
        
        private double _ValueMinField;
        
        private string _VentActuelField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public TelecommandeCommandes[] Commandes {
            get {
                return this.commandesField;
            }
            set {
                this.commandesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string _Adresse1 {
            get {
                return this._Adresse1Field;
            }
            set {
                this._Adresse1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string _Adresse2 {
            get {
                return this._Adresse2Field;
            }
            set {
                this._Adresse2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string _ConditionActuel {
            get {
                return this._ConditionActuelField;
            }
            set {
                this._ConditionActuelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string _ConditionJ1 {
            get {
                return this._ConditionJ1Field;
            }
            set {
                this._ConditionJ1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string _ConditionJ2 {
            get {
                return this._ConditionJ2Field;
            }
            set {
                this._ConditionJ2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string _ConditionJ3 {
            get {
                return this._ConditionJ3Field;
            }
            set {
                this._ConditionJ3Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string _ConditionToday {
            get {
                return this._ConditionTodayField;
            }
            set {
                this._ConditionTodayField = value;
            }
        }
        
        /// <remarks/>
        public double _Correction {
            get {
                return this._CorrectionField;
            }
            set {
                this._CorrectionField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime _DateCreated {
            get {
                return this._DateCreatedField;
            }
            set {
                this._DateCreatedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string _Description {
            get {
                return this._DescriptionField;
            }
            set {
                this._DescriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public DeviceAction[] _DeviceAction {
            get {
                return this._DeviceActionField;
            }
            set {
                this._DeviceActionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string _DriverId {
            get {
                return this._DriverIdField;
            }
            set {
                this._DriverIdField = value;
            }
        }
        
        /// <remarks/>
        public bool _Enable {
            get {
                return this._EnableField;
            }
            set {
                this._EnableField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string _Formatage {
            get {
                return this._FormatageField;
            }
            set {
                this._FormatageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string _HumActuel {
            get {
                return this._HumActuelField;
            }
            set {
                this._HumActuelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string _ID {
            get {
                return this._IDField;
            }
            set {
                this._IDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string _IconActuel {
            get {
                return this._IconActuelField;
            }
            set {
                this._IconActuelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string _IconJ1 {
            get {
                return this._IconJ1Field;
            }
            set {
                this._IconJ1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string _IconJ2 {
            get {
                return this._IconJ2Field;
            }
            set {
                this._IconJ2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string _IconJ3 {
            get {
                return this._IconJ3Field;
            }
            set {
                this._IconJ3Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string _IconToday {
            get {
                return this._IconTodayField;
            }
            set {
                this._IconTodayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string _JourJ1 {
            get {
                return this._JourJ1Field;
            }
            set {
                this._JourJ1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string _JourJ2 {
            get {
                return this._JourJ2Field;
            }
            set {
                this._JourJ2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string _JourJ3 {
            get {
                return this._JourJ3Field;
            }
            set {
                this._JourJ3Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string _JourToday {
            get {
                return this._JourTodayField;
            }
            set {
                this._JourTodayField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime _LastChange {
            get {
                return this._LastChangeField;
            }
            set {
                this._LastChangeField = value;
            }
        }
        
        /// <remarks/>
        public int _LastChangeDuree {
            get {
                return this._LastChangeDureeField;
            }
            set {
                this._LastChangeDureeField = value;
            }
        }
        
        /// <remarks/>
        public bool _LastEtat {
            get {
                return this._LastEtatField;
            }
            set {
                this._LastEtatField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public DeviceDeviceCommande[] _ListCommandPlus {
            get {
                return this._ListCommandPlusField;
            }
            set {
                this._ListCommandPlusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string _MaxJ1 {
            get {
                return this._MaxJ1Field;
            }
            set {
                this._MaxJ1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string _MaxJ2 {
            get {
                return this._MaxJ2Field;
            }
            set {
                this._MaxJ2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string _MaxJ3 {
            get {
                return this._MaxJ3Field;
            }
            set {
                this._MaxJ3Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string _MaxToday {
            get {
                return this._MaxTodayField;
            }
            set {
                this._MaxTodayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string _MinJ1 {
            get {
                return this._MinJ1Field;
            }
            set {
                this._MinJ1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string _MinJ2 {
            get {
                return this._MinJ2Field;
            }
            set {
                this._MinJ2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string _MinJ3 {
            get {
                return this._MinJ3Field;
            }
            set {
                this._MinJ3Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string _MinToday {
            get {
                return this._MinTodayField;
            }
            set {
                this._MinTodayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string _Modele {
            get {
                return this._ModeleField;
            }
            set {
                this._ModeleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string _Name {
            get {
                return this._NameField;
            }
            set {
                this._NameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string _Picture {
            get {
                return this._PictureField;
            }
            set {
                this._PictureField = value;
            }
        }
        
        /// <remarks/>
        public double _Precision {
            get {
                return this._PrecisionField;
            }
            set {
                this._PrecisionField = value;
            }
        }
        
        /// <remarks/>
        public double _Refresh {
            get {
                return this._RefreshField;
            }
            set {
                this._RefreshField = value;
            }
        }
        
        /// <remarks/>
        public bool _Solo {
            get {
                return this._SoloField;
            }
            set {
                this._SoloField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string _TempActuel {
            get {
                return this._TempActuelField;
            }
            set {
                this._TempActuelField = value;
            }
        }
        
        /// <remarks/>
        public DeviceListeDevices _Type {
            get {
                return this._TypeField;
            }
            set {
                this._TypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public object _Value {
            get {
                return this._ValueField;
            }
            set {
                this._ValueField = value;
            }
        }
        
        /// <remarks/>
        public double _ValueDef {
            get {
                return this._ValueDefField;
            }
            set {
                this._ValueDefField = value;
            }
        }
        
        /// <remarks/>
        public double _ValueLast {
            get {
                return this._ValueLastField;
            }
            set {
                this._ValueLastField = value;
            }
        }
        
        /// <remarks/>
        public double _ValueMax {
            get {
                return this._ValueMaxField;
            }
            set {
                this._ValueMaxField = value;
            }
        }
        
        /// <remarks/>
        public double _ValueMin {
            get {
                return this._ValueMinField;
            }
            set {
                this._ValueMinField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string _VentActuel {
            get {
                return this._VentActuelField;
            }
            set {
                this._VentActuelField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="Telecommande.Commandes", Namespace="http://schemas.datacontract.org/2004/07/HoMIDom.HoMIDom")]
    public partial class TelecommandeCommandes {
        
        private string codeField;
        
        private int columnField;
        
        private bool columnFieldSpecified;
        
        private string nameField;
        
        private string pictureField;
        
        private int repeatField;
        
        private bool repeatFieldSpecified;
        
        private int rowField;
        
        private bool rowFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        public int Column {
            get {
                return this.columnField;
            }
            set {
                this.columnField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ColumnSpecified {
            get {
                return this.columnFieldSpecified;
            }
            set {
                this.columnFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Picture {
            get {
                return this.pictureField;
            }
            set {
                this.pictureField = value;
            }
        }
        
        /// <remarks/>
        public int Repeat {
            get {
                return this.repeatField;
            }
            set {
                this.repeatField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RepeatSpecified {
            get {
                return this.repeatFieldSpecified;
            }
            set {
                this.repeatFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int Row {
            get {
                return this.rowField;
            }
            set {
                this.rowField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RowSpecified {
            get {
                return this.rowFieldSpecified;
            }
            set {
                this.rowFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="Device.ListeDevices", Namespace="http://schemas.datacontract.org/2004/07/HoMIDom.HoMIDom")]
    public enum DeviceListeDevices {
        
        /// <remarks/>
        APPAREIL,
        
        /// <remarks/>
        AUDIO,
        
        /// <remarks/>
        BAROMETRE,
        
        /// <remarks/>
        BATTERIE,
        
        /// <remarks/>
        COMPTEUR,
        
        /// <remarks/>
        CONTACT,
        
        /// <remarks/>
        DETECTEUR,
        
        /// <remarks/>
        DIRECTIONVENT,
        
        /// <remarks/>
        ENERGIEINSTANTANEE,
        
        /// <remarks/>
        ENERGIETOTALE,
        
        /// <remarks/>
        FREEBOX,
        
        /// <remarks/>
        GENERIQUEBOOLEEN,
        
        /// <remarks/>
        GENERIQUESTRING,
        
        /// <remarks/>
        GENERIQUEVALUE,
        
        /// <remarks/>
        HUMIDITE,
        
        /// <remarks/>
        LAMPE,
        
        /// <remarks/>
        METEO,
        
        /// <remarks/>
        MULTIMEDIA,
        
        /// <remarks/>
        PLUIECOURANT,
        
        /// <remarks/>
        PLUIETOTAL,
        
        /// <remarks/>
        SWITCH,
        
        /// <remarks/>
        TELECOMMANDE,
        
        /// <remarks/>
        TEMPERATURE,
        
        /// <remarks/>
        TEMPERATURECONSIGNE,
        
        /// <remarks/>
        UV,
        
        /// <remarks/>
        VITESSEVENT,
        
        /// <remarks/>
        VOLET,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="Users.User", Namespace="http://schemas.datacontract.org/2004/07/HoMIDom.HoMIDom")]
    public partial class UsersUser {
        
        private string adresseField;
        
        private string codePostalField;
        
        private string idField;
        
        private string imageField;
        
        private string nomField;
        
        private string numberIdentificationField;
        
        private string passwordField;
        
        private string prenomField;
        
        private UsersTypeProfil profilField;
        
        private bool profilFieldSpecified;
        
        private string telAutreField;
        
        private string telFixeField;
        
        private string telMobileField;
        
        private string userNameField;
        
        private string villeField;
        
        private string eMailField;
        
        private string eMailAutreField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Adresse {
            get {
                return this.adresseField;
            }
            set {
                this.adresseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CodePostal {
            get {
                return this.codePostalField;
            }
            set {
                this.codePostalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Image {
            get {
                return this.imageField;
            }
            set {
                this.imageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Nom {
            get {
                return this.nomField;
            }
            set {
                this.nomField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string NumberIdentification {
            get {
                return this.numberIdentificationField;
            }
            set {
                this.numberIdentificationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Prenom {
            get {
                return this.prenomField;
            }
            set {
                this.prenomField = value;
            }
        }
        
        /// <remarks/>
        public UsersTypeProfil Profil {
            get {
                return this.profilField;
            }
            set {
                this.profilField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ProfilSpecified {
            get {
                return this.profilFieldSpecified;
            }
            set {
                this.profilFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string TelAutre {
            get {
                return this.telAutreField;
            }
            set {
                this.telAutreField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string TelFixe {
            get {
                return this.telFixeField;
            }
            set {
                this.telFixeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string TelMobile {
            get {
                return this.telMobileField;
            }
            set {
                this.telMobileField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Ville {
            get {
                return this.villeField;
            }
            set {
                this.villeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string eMail {
            get {
                return this.eMailField;
            }
            set {
                this.eMailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string eMailAutre {
            get {
                return this.eMailAutreField;
            }
            set {
                this.eMailAutreField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="Users.TypeProfil", Namespace="http://schemas.datacontract.org/2004/07/HoMIDom.HoMIDom")]
    public enum UsersTypeProfil {
        
        /// <remarks/>
        invite,
        
        /// <remarks/>
        user,
        
        /// <remarks/>
        admin,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="Audio.ExtensionAudio", Namespace="http://schemas.datacontract.org/2004/07/HoMIDom.HoMIDom")]
    public partial class AudioExtensionAudio {
        
        private bool _EnableField;
        
        private string _ExtensionField;
        
        /// <remarks/>
        public bool _Enable {
            get {
                return this._EnableField;
            }
            set {
                this._EnableField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string _Extension {
            get {
                return this._ExtensionField;
            }
            set {
                this._ExtensionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="Audio.RepertoireAudio", Namespace="http://schemas.datacontract.org/2004/07/HoMIDom.HoMIDom")]
    public partial class AudioRepertoireAudio {
        
        private bool _EnableField;
        
        private string _RepertoireField;
        
        /// <remarks/>
        public bool _Enable {
            get {
                return this._EnableField;
            }
            set {
                this._EnableField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string _Repertoire {
            get {
                return this._RepertoireField;
            }
            set {
                this._RepertoireField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="Telecommande.Template", Namespace="http://schemas.datacontract.org/2004/07/HoMIDom.HoMIDom")]
    public partial class TelecommandeTemplate {
        
        private int colonneField;
        
        private bool colonneFieldSpecified;
        
        private string driverField;
        
        private string fabricantField;
        
        private string fileField;
        
        private int ligneField;
        
        private bool ligneFieldSpecified;
        
        private string modeleField;
        
        /// <remarks/>
        public int Colonne {
            get {
                return this.colonneField;
            }
            set {
                this.colonneField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ColonneSpecified {
            get {
                return this.colonneFieldSpecified;
            }
            set {
                this.colonneFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Driver {
            get {
                return this.driverField;
            }
            set {
                this.driverField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Fabricant {
            get {
                return this.fabricantField;
            }
            set {
                this.fabricantField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string File {
            get {
                return this.fileField;
            }
            set {
                this.fileField = value;
            }
        }
        
        /// <remarks/>
        public int Ligne {
            get {
                return this.ligneField;
            }
            set {
                this.ligneField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LigneSpecified {
            get {
                return this.ligneFieldSpecified;
            }
            set {
                this.ligneFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Modele {
            get {
                return this.modeleField;
            }
            set {
                this.modeleField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="Server.TypeSource", Namespace="http://schemas.datacontract.org/2004/07/HoMIDom.HoMIDom")]
    public enum ServerTypeSource {
        
        /// <remarks/>
        SERVEUR,
        
        /// <remarks/>
        SCRIPT,
        
        /// <remarks/>
        TRIGGER,
        
        /// <remarks/>
        DEVICE,
        
        /// <remarks/>
        DRIVER,
        
        /// <remarks/>
        SOAP,
        
        /// <remarks/>
        CLIENT,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="Telecommande.TypeEquipement", Namespace="http://schemas.datacontract.org/2004/07/HoMIDom.HoMIDom")]
    public enum TelecommandeTypeEquipement {
        
        /// <remarks/>
        VIDE,
        
        /// <remarks/>
        TV,
        
        /// <remarks/>
        DVD,
        
        /// <remarks/>
        AUDIO,
        
        /// <remarks/>
        BOX,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ReturnTriggerByIdCompletedEventHandler(object sender, ReturnTriggerByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReturnTriggerByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReturnTriggerByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Trigger Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Trigger)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DeleteTriggerCompletedEventHandler(object sender, DeleteTriggerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteTriggerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteTriggerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int DeleteTriggerResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool DeleteTriggerResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SaveTriggerCompletedEventHandler(object sender, SaveTriggerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveTriggerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveTriggerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ListMethodCompletedEventHandler(object sender, ListMethodCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListMethodCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListMethodCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Get4LogCompletedEventHandler(object sender, Get4LogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get4LogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get4LogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetTypeLogEnableCompletedEventHandler(object sender, GetTypeLogEnableCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTypeLogEnableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTypeLogEnableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SetTypeLogEnableCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SetMaxMonthLogCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetMaxMonthLogCompletedEventHandler(object sender, GetMaxMonthLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMaxMonthLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMaxMonthLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int GetMaxMonthLogResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool GetMaxMonthLogResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void LogCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ReturnLogCompletedEventHandler(object sender, ReturnLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReturnLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReturnLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SetMaxFileSizeLogCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetMaxFileSizeLogCompletedEventHandler(object sender, GetMaxFileSizeLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMaxFileSizeLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMaxFileSizeLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long GetMaxFileSizeLogResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool GetMaxFileSizeLogResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetSMTPServeurCompletedEventHandler(object sender, GetSMTPServeurCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSMTPServeurCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSMTPServeurCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SetSMTPServeurCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetSMTPLoginCompletedEventHandler(object sender, GetSMTPLoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSMTPLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSMTPLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SetSMTPLoginCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetSMTPPasswordCompletedEventHandler(object sender, GetSMTPPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSMTPPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSMTPPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SetSMTPPasswordCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetSMTPMailServeurCompletedEventHandler(object sender, GetSMTPMailServeurCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSMTPMailServeurCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSMTPMailServeurCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SetSMTPMailServeurCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetListOfTemplateCompletedEventHandler(object sender, GetListOfTemplateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetListOfTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetListOfTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TelecommandeTemplate[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TelecommandeTemplate[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CreateNewTemplateCompletedEventHandler(object sender, CreateNewTemplateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateNewTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateNewTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void StartLearningCompletedEventHandler(object sender, StartLearningCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StartLearningCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StartLearningCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SaveTemplateCompletedEventHandler(object sender, SaveTemplateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void TelecommandeSendCommandCompletedEventHandler(object sender, TelecommandeSendCommandCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TelecommandeSendCommandCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TelecommandeSendCommandCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void EnableRepertoireAudioCompletedEventHandler(object sender, EnableRepertoireAudioCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EnableRepertoireAudioCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EnableRepertoireAudioCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int EnableRepertoireAudioResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool EnableRepertoireAudioResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAllRepertoiresAudioCompletedEventHandler(object sender, GetAllRepertoiresAudioCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllRepertoiresAudioCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllRepertoiresAudioCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AudioRepertoireAudio[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AudioRepertoireAudio[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAllExtensionsAudioCompletedEventHandler(object sender, GetAllExtensionsAudioCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllExtensionsAudioCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllExtensionsAudioCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AudioExtensionAudio[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AudioExtensionAudio[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DeleteUserCompletedEventHandler(object sender, DeleteUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int DeleteUserResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool DeleteUserResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void VerifLoginCompletedEventHandler(object sender, VerifLoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool VerifLoginResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool VerifLoginResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ChangePasswordCompletedEventHandler(object sender, ChangePasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangePasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangePasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool ChangePasswordResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool ChangePasswordResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ReturnUserByUsernameCompletedEventHandler(object sender, ReturnUserByUsernameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReturnUserByUsernameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReturnUserByUsernameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UsersUser Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UsersUser)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAllUsersCompletedEventHandler(object sender, GetAllUsersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UsersUser[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UsersUser[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ReturnUserByIdCompletedEventHandler(object sender, ReturnUserByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReturnUserByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReturnUserByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UsersUser Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UsersUser)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SaveUserCompletedEventHandler(object sender, SaveUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAllDevicesCompletedEventHandler(object sender, GetAllDevicesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllDevicesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllDevicesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TemplateDevice[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TemplateDevice[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ExecuteDeviceCommandCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DeleteDeviceCompletedEventHandler(object sender, DeleteDeviceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteDeviceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteDeviceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int DeleteDeviceResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool DeleteDeviceResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DeleteDeviceCommandIRCompletedEventHandler(object sender, DeleteDeviceCommandIRCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteDeviceCommandIRCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteDeviceCommandIRCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int DeleteDeviceCommandIRResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool DeleteDeviceCommandIRResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ReturnDeviceByIDCompletedEventHandler(object sender, ReturnDeviceByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReturnDeviceByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReturnDeviceByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TemplateDevice Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TemplateDevice)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ReturnDeviceByAdresse1TypeDriverCompletedEventHandler(object sender, ReturnDeviceByAdresse1TypeDriverCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReturnDeviceByAdresse1TypeDriverCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReturnDeviceByAdresse1TypeDriverCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SaveDeviceCompletedEventHandler(object sender, SaveDeviceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveDeviceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveDeviceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SaveDeviceCommandIRCompletedEventHandler(object sender, SaveDeviceCommandIRCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveDeviceCommandIRCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveDeviceCommandIRCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void StartIrLearningCompletedEventHandler(object sender, StartIrLearningCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StartIrLearningCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StartIrLearningCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void VerifChampCompletedEventHandler(object sender, VerifChampCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifChampCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifChampCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAllDriversCompletedEventHandler(object sender, GetAllDriversCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllDriversCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllDriversCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TemplateDriver[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TemplateDriver[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ExecuteDriverCommandCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ReturnDriverByIDCompletedEventHandler(object sender, ReturnDriverByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReturnDriverByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReturnDriverByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TemplateDriver Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TemplateDriver)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DeleteDriverCompletedEventHandler(object sender, DeleteDriverCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteDriverCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteDriverCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int DeleteDriverResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool DeleteDriverResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ReturnDriverByNomCompletedEventHandler(object sender, ReturnDriverByNomCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReturnDriverByNomCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReturnDriverByNomCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SaveDriverCompletedEventHandler(object sender, SaveDriverCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveDriverCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveDriverCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void StopDriverCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void StartDriverCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ZoneIsEmptyCompletedEventHandler(object sender, ZoneIsEmptyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ZoneIsEmptyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ZoneIsEmptyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool ZoneIsEmptyResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool ZoneIsEmptyResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DeleteZoneCompletedEventHandler(object sender, DeleteZoneCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteZoneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteZoneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int DeleteZoneResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool DeleteZoneResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAllZonesCompletedEventHandler(object sender, GetAllZonesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllZonesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllZonesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Zone[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Zone[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDeviceInZoneCompletedEventHandler(object sender, GetDeviceInZoneCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDeviceInZoneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDeviceInZoneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TemplateDevice[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TemplateDevice[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ReturnZoneByIDCompletedEventHandler(object sender, ReturnZoneByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReturnZoneByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReturnZoneByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Zone Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Zone)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SaveZoneCompletedEventHandler(object sender, SaveZoneCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveZoneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveZoneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AddDeviceToZoneCompletedEventHandler(object sender, AddDeviceToZoneCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddDeviceToZoneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddDeviceToZoneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DeleteDeviceToZoneCompletedEventHandler(object sender, DeleteDeviceToZoneCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteDeviceToZoneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteDeviceToZoneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DeleteMacroCompletedEventHandler(object sender, DeleteMacroCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteMacroCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteMacroCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int DeleteMacroResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool DeleteMacroResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void RunMacroCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAllMacrosCompletedEventHandler(object sender, GetAllMacrosCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllMacrosCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllMacrosCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Macro[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Macro[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ReturnMacroByIdCompletedEventHandler(object sender, ReturnMacroByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReturnMacroByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReturnMacroByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Macro Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Macro)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SaveMacroCompletedEventHandler(object sender, SaveMacroCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveMacroCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveMacroCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAllTriggersCompletedEventHandler(object sender, GetAllTriggersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllTriggersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllTriggersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Trigger[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Trigger[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UploadFileCompletedEventHandler(object sender, UploadFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAllVoiceCompletedEventHandler(object sender, GetAllVoiceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllVoiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllVoiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDefautVoiceCompletedEventHandler(object sender, GetDefautVoiceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDefautVoiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDefautVoiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SetDefautVoiceCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CanDeleteCompletedEventHandler(object sender, CanDeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CanDeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CanDeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetTimeSaveCompletedEventHandler(object sender, GetTimeSaveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTimeSaveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTimeSaveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int GetTimeSaveResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool GetTimeSaveResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SetTimeSaveCompletedEventHandler(object sender, SetTimeSaveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetTimeSaveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetTimeSaveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetIdServerCompletedEventHandler(object sender, GetIdServerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetIdServerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetIdServerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SetIdServerCompletedEventHandler(object sender, SetIdServerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetIdServerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetIdServerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetServerVersionCompletedEventHandler(object sender, GetServerVersionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetServerVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetServerVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetTimeCompletedEventHandler(object sender, GetTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void MessageToServerCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SaveConfigCompletedEventHandler(object sender, SaveConfigCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveConfigCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveConfigCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ExportConfigCompletedEventHandler(object sender, ExportConfigCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExportConfigCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExportConfigCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ImportConfigCompletedEventHandler(object sender, ImportConfigCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ImportConfigCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ImportConfigCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void StartCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void StopCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ReStartCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SetPortSOAPCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetPortSOAPCompletedEventHandler(object sender, GetPortSOAPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPortSOAPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPortSOAPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double GetPortSOAPResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool GetPortSOAPResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SetIPSOAPCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetIPSOAPCompletedEventHandler(object sender, GetIPSOAPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetIPSOAPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetIPSOAPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetLastStartTimeCompletedEventHandler(object sender, GetLastStartTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLastStartTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLastStartTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.DateTime GetLastStartTimeResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool GetLastStartTimeResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetHeureLeverSoleilCompletedEventHandler(object sender, GetHeureLeverSoleilCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHeureLeverSoleilCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHeureLeverSoleilCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetHeureCoucherSoleilCompletedEventHandler(object sender, GetHeureCoucherSoleilCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHeureCoucherSoleilCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHeureCoucherSoleilCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetLongitudeCompletedEventHandler(object sender, GetLongitudeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLongitudeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLongitudeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double GetLongitudeResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool GetLongitudeResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SetLongitudeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetLatitudeCompletedEventHandler(object sender, GetLatitudeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLatitudeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLatitudeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double GetLatitudeResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool GetLatitudeResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SetLatitudeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetHeureCorrectionCoucherCompletedEventHandler(object sender, GetHeureCorrectionCoucherCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHeureCorrectionCoucherCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHeureCorrectionCoucherCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int GetHeureCorrectionCoucherResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool GetHeureCorrectionCoucherResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SetHeureCorrectionCoucherCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetHeureCorrectionLeverCompletedEventHandler(object sender, GetHeureCorrectionLeverCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHeureCorrectionLeverCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHeureCorrectionLeverCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int GetHeureCorrectionLeverResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool GetHeureCorrectionLeverResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SetHeureCorrectionLeverCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetByteFromImageCompletedEventHandler(object sender, GetByteFromImageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetByteFromImageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetByteFromImageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetListOfImageCompletedEventHandler(object sender, GetListOfImageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetListOfImageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetListOfImageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ImageFile[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ImageFile[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAllListHistoCompletedEventHandler(object sender, GetAllListHistoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllListHistoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllListHistoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Historisation[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Historisation[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetHistoCompletedEventHandler(object sender, GetHistoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHistoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHistoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Historisation[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Historisation[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DeleteExtensionAudioCompletedEventHandler(object sender, DeleteExtensionAudioCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteExtensionAudioCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteExtensionAudioCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int DeleteExtensionAudioResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool DeleteExtensionAudioResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void NewExtensionAudioCompletedEventHandler(object sender, NewExtensionAudioCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NewExtensionAudioCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NewExtensionAudioCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int NewExtensionAudioResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool NewExtensionAudioResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void EnableExtensionAudioCompletedEventHandler(object sender, EnableExtensionAudioCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EnableExtensionAudioCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EnableExtensionAudioCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int EnableExtensionAudioResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool EnableExtensionAudioResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DeleteRepertoireAudioCompletedEventHandler(object sender, DeleteRepertoireAudioCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteRepertoireAudioCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteRepertoireAudioCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int DeleteRepertoireAudioResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool DeleteRepertoireAudioResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void NewRepertoireAudioCompletedEventHandler(object sender, NewRepertoireAudioCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NewRepertoireAudioCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NewRepertoireAudioCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int NewRepertoireAudioResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool NewRepertoireAudioResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
}

#pragma warning restore 1591